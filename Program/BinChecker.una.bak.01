Unison:SyntaxRevision1909.1;

__PinType Null_PinType {
    __Type = NullPin;
}
__AdapterBoard BinBoard {
    __Pin { __Name = DUMMY_PIN; __XCoord = (0,0); __Shape = 0; __PinType = Null_PinType; 
        __Connection[0] { }
    }
    __MaxSite = 16;
}
__OperatorVariable MaxHardwareBin {
    __Comment = "Maximum number of hardware bins the handler supports.";
    __Expression = __Expression { __String = "257"; }
    __UserMode = Production;
}
__OperatorVariable RandomBinning {
    __Comment = "FALSE = Bin result is set by SitenConstBin, which is set to ConstantBin.";
    __Expression = __Expression { __String = "TRUE"; }
    __UserMode = Production;
}
__OperatorVariable Site1ConstBin {
    __Comment = "Constant Bin Code for Site 1, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "0"; }
    __UserMode = Production;
}
__OperatorVariable Site8ConstBin {
    __Comment = "Constant Bin Code for Site 8, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "7"; }
    __UserMode = Production;
}
__OperatorVariable Site2ConstBin {
    __Comment = "Constant Bin Code for Site 2, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "1"; }
    __UserMode = Production;
}
__OperatorVariable Site9ConstBin {
    __Comment = "Constant Bin Code for Site 9, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "8"; }
    __UserMode = Production;
}
__OperatorVariable Site3ConstBin {
    __Comment = "Constant Bin Code for Site 3, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "2"; }
    __UserMode = Production;
}
__OperatorVariable Site4ConstBin {
    __Comment = "Constant Bin Code for Site 4, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "3"; }
    __UserMode = Production;
}
__OperatorVariable Site5ConstBin {
    __Comment = "Constant Bin Code for Site 5, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "4"; }
    __UserMode = Production;
}
__OperatorVariable Site6ConstBin {
    __Comment = "Constant Bin Code for Site 6, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "5"; }
    __UserMode = Production;
}
__OperatorVariable Site7ConstBin {
    __Comment = "Constant Bin Code for Site 7, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "6"; }
    __UserMode = Production;
}
__OperatorVariable Site10ConstBin {
    __Comment = "Constant Bin Code for Site 10, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "9"; }
    __UserMode = Production;
}
__OperatorVariable Site11ConstBin {
    __Comment = "Constant Bin Code for Site 11, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "10"; }
    __UserMode = Production;
}
__OperatorVariable Site12ConstBin {
    __Comment = "Constant Bin Code for Site 12, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "11"; }
    __UserMode = Production;
}
__OperatorVariable Site13ConstBin {
    __Comment = "Constant Bin Code for Site 13, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "12"; }
    __UserMode = Production;
}
__OperatorVariable Site14ConstBin {
    __Comment = "Constant Bin Code for Site 14, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "13"; }
    __UserMode = Production;
}
__OperatorVariable Site15ConstBin {
    __Comment = "Constant Bin Code for Site 15, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "14"; }
    __UserMode = Production;
}
__OperatorVariable Site16ConstBin {
    __Comment = "Constant Bin Code for Site 16, used when RandomBinning = FALSE.";
    __Expression = __Expression { __String = "15"; }
    __UserMode = Production;
}
__Spec BinSpec {
    __Category[0] = BinCat1;
    __Param[0] = BinSelected;
    __Param[1] = ConstantBin;
}
__Param BinSelected {
    __Type = SCALAR;
    __Spec = BinSpec;
    BinCat1 {
        Typ = __Expression { __String = "Site(fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin),fmod(fabs(rand()),MaxHardwareBin))"; __Type = SCALAR; }
    }
}
__Param ConstantBin {
    __Type = SCALAR;
    __Spec = BinSpec;
    BinCat1 {
        Typ = __Expression { __String = "Site(Site1ConstBin,Site2ConstBin,Site3ConstBin,Site4ConstBin,Site5ConstBin,Site6ConstBin,Site7ConstBin,Site8ConstBin,Site9ConstBin,Site10ConstBin,Site11ConstBin,Site12ConstBin,Site13ConstBin,Site14ConstBin,Site15ConstBin,Site16ConstBin)"; __Type = SCALAR; }
    }
}
__Flow MainFlow {
    OnStart = OnStartFlow;
    OnLoad = myOnLoad;
    OnReset = OnResetFlow;
    OnPowerDown = PowerDownFlow;
    OnInitFlow = InitFlow;
    OnWaferStart = onwafstart;
    UsrCal = UsrCalFlow;
    OnUsr0 = OnUsr0;
    OnUsr1 = OnUsr1;
    OnUsr2 = OnUsr2;
    __LoopNotify = __False;
}
__SubFlow UsrCalFlow {
}
__SubFlow OnStartFlow {
    __Node Bin_Flow_57_113_882 {
        __XCoord = (192,67);
        __Port[0] {
            __PortPosition = 91;
        }
        __InputPosition = 272;
        __TestID = "\'Flow_57_113\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = Bin_Flow_57_113;
    }
    __Node Bin_Flow_114_170_883 {
        __XCoord = (345,68);
        __Port[0] {
            __PortPosition = 92;
        }
        __InputPosition = 274;
        __TestID = "\'Flow_114_170\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = Bin_Flow_114_170;
    }
    __Node Bin_Flow_171_227_884 {
        __XCoord = (500,70);
        __Port[0] {
            __PortPosition = 92;
        }
        __InputPosition = 270;
        __TestID = "\'Flow_171_227\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = Bin_Flow_171_227;
    }
    __Node Bin_Flow_228_284_885 {
        __XCoord = (650,71);
        __Port[0] {
            __PortPosition = 88;
        }
        __InputPosition = 272;
        __TestID = "\'Flow_228_284\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = Bin_Flow_228_284;
    }
    __Node Bin_Flow_0_56_886 {
        __XCoord = (51,67);
        __Port[0] {
            __PortPosition = 91;
        }
        __InputPosition = 3;
        __TestID = "\'Flow_0_56\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = Bin_Flow_0_56;
    }
    __StartNode = Bin_Flow_0_56_886;
    __PortConnections {
        Bin_Flow_57_113_882 __Port[0] = Bin_Flow_114_170_883;
        Bin_Flow_114_170_883 __Port[0] = Bin_Flow_171_227_884;
        Bin_Flow_171_227_884 __Port[0] = Bin_Flow_228_284_885;
    }
}
__SubFlow Bin_Flow_57_113 {
    __TestGroup BinDecision_57_75 {
        __XCoord = (212,212);
        __Port[0] {
            __PortPosition = 308;
        }
        __Port[1] {
            __PortPosition = 300;
        }
        __Port[2] {
            __PortPosition = 287;
        }
        __Port[3] {
            __PortPosition = 275;
        }
        __Port[4] {
            __PortPosition = 260;
        }
        __Port[5] {
            __PortPosition = 247;
        }
        __Port[6] {
            __PortPosition = 236;
        }
        __Port[7] {
            __PortPosition = 228;
        }
        __Port[8] {
            __PortPosition = 200;
        }
        __Port[9] {
            __PortPosition = 189;
        }
        __Port[10] {
            __PortPosition = 174;
        }
        __Port[11] {
            __PortPosition = 159;
        }
        __Port[12] {
            __PortPosition = 132;
        }
        __Port[13] {
            __PortPosition = 122;
        }
        __Port[14] {
            __PortPosition = 111;
        }
        __Port[15] {
            __PortPosition = 95;
        }
        __Port[16] {
            __PortPosition = 77;
        }
        __Port[17] {
            __PortPosition = 62;
        }
        __Port[18] {
            __PortPosition = 52;
        }
        __Port[19] {
            __PortPosition = 19;
        }
        __InputPosition = 338;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "7000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 57, ConstantBin = 57)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 58, ConstantBin = 58)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 59, ConstantBin = 59)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 60, ConstantBin = 60)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 61, ConstantBin = 61)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 62, ConstantBin = 62)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 63, ConstantBin = 63)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 64, ConstantBin = 64)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 65, ConstantBin = 65)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 66, ConstantBin = 66)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 67, ConstantBin = 67)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 68, ConstantBin = 68)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 69, ConstantBin = 69)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 70, ConstantBin = 70)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 71, ConstantBin = 71)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 72, ConstantBin = 72)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 73, ConstantBin = 73)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 74, ConstantBin = 74)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 75, ConstantBin = 75)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_57_75;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_57_75_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_57_169 {
        __XCoord = (60,197);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_57\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_57;
    }
    __Node BIN_58_170 {
        __XCoord = (61,235);
        __InputPosition = 97;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_58\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_58;
    }
    __Node BIN_59_171 {
        __XCoord = (61,273);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_59\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_59;
    }
    __Node BIN_60_172 {
        __XCoord = (62,310);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_60\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_60;
    }
    __Node BIN_61_173 {
        __XCoord = (66,350);
        __InputPosition = 87;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_61\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_61;
    }
    __Node BIN_62_174 {
        __XCoord = (67,390);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_62\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_62;
    }
    __Node BIN_63_175 {
        __XCoord = (72,428);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_63\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_63;
    }
    __Node BIN_64_176 {
        __XCoord = (75,465);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_64\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_64;
    }
    __Node BIN_65_177 {
        __XCoord = (166,495);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_65\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_65;
    }
    __Node BIN_66_178 {
        __XCoord = (232,495);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_66\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_66;
    }
    __Node BIN_67_179 {
        __XCoord = (301,493);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_67\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_67;
    }
    __Node BIN_68_180 {
        __XCoord = (367,493);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_68\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_68;
    }
    __Node BIN_69_181 {
        __XCoord = (462,447);
        __InputPosition = 275;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_69\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_69;
    }
    __Node BIN_70_182 {
        __XCoord = (462,408);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_70\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_70;
    }
    __Node BIN_71_183 {
        __XCoord = (461,370);
        __InputPosition = 274;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_71\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_71;
    }
    __Node BIN_72_184 {
        __XCoord = (461,330);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_72\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_72;
    }
    __Node BIN_73_185 {
        __XCoord = (457,290);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_73\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_73;
    }
    __Node BIN_74_186 {
        __XCoord = (457,252);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_74\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_74;
    }
    __Node BIN_75_187 {
        __XCoord = (457,213);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_75\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_75;
    }
    __TestGroup BinDecision_76_94 {
        __XCoord = (722,205);
        __Port[0] {
            __PortPosition = 313;
        }
        __Port[1] {
            __PortPosition = 303;
        }
        __Port[2] {
            __PortPosition = 290;
        }
        __Port[3] {
            __PortPosition = 275;
        }
        __Port[4] {
            __PortPosition = 257;
        }
        __Port[5] {
            __PortPosition = 246;
        }
        __Port[6] {
            __PortPosition = 236;
        }
        __Port[7] {
            __PortPosition = 228;
        }
        __Port[8] {
            __PortPosition = 198;
        }
        __Port[9] {
            __PortPosition = 185;
        }
        __Port[10] {
            __PortPosition = 170;
        }
        __Port[11] {
            __PortPosition = 155;
        }
        __Port[12] {
            __PortPosition = 130;
        }
        __Port[13] {
            __PortPosition = 122;
        }
        __Port[14] {
            __PortPosition = 110;
        }
        __Port[15] {
            __PortPosition = 95;
        }
        __Port[16] {
            __PortPosition = 80;
        }
        __Port[17] {
            __PortPosition = 66;
        }
        __Port[18] {
            __PortPosition = 57;
        }
        __Port[19] {
            __PortPosition = 23;
        }
        __InputPosition = 336;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "8000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 76, ConstantBin = 76)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 77, ConstantBin = 77)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 78, ConstantBin = 78)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 79, ConstantBin = 79)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 80, ConstantBin = 80)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 81, ConstantBin = 81)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 82, ConstantBin = 82)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 83, ConstantBin = 83)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 84, ConstantBin = 84)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 85, ConstantBin = 85)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 86, ConstantBin = 86)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 87, ConstantBin = 87)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 88, ConstantBin = 88)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 89, ConstantBin = 89)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 90, ConstantBin = 90)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 91, ConstantBin = 91)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 92, ConstantBin = 92)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 93, ConstantBin = 93)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 94, ConstantBin = 94)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_76_94;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_76_94_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_76_189 {
        __XCoord = (575,180);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_76\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_76;
    }
    __Node BIN_77_190 {
        __XCoord = (576,217);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_77\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_77;
    }
    __Node BIN_78_191 {
        __XCoord = (580,255);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_78\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_78;
    }
    __Node BIN_79_192 {
        __XCoord = (582,295);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_79\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_79;
    }
    __Node BIN_80_193 {
        __XCoord = (585,332);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_80\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_80;
    }
    __Node BIN_81_194 {
        __XCoord = (586,372);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_81\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_81;
    }
    __Node BIN_82_195 {
        __XCoord = (586,412);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_82\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_82;
    }
    __Node BIN_83_196 {
        __XCoord = (591,452);
        __InputPosition = 80;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_83\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_83;
    }
    __Node BIN_84_197 {
        __XCoord = (667,485);
        __InputPosition = 8;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_84\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_84;
    }
    __Node BIN_85_198 {
        __XCoord = (741,482);
        __InputPosition = 354;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_85\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_85;
    }
    __Node BIN_86_199 {
        __XCoord = (821,482);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_86\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_86;
    }
    __Node BIN_87_200 {
        __XCoord = (890,482);
        __InputPosition = 349;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_87\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_87;
    }
    __Node BIN_88_201 {
        __XCoord = (961,430);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_88\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_88;
    }
    __Node BIN_89_202 {
        __XCoord = (957,387);
        __InputPosition = 250;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_89\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_89;
    }
    __Node BIN_90_203 {
        __XCoord = (957,347);
        __InputPosition = 259;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_90\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_90;
    }
    __Node BIN_91_204 {
        __XCoord = (957,310);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_91\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_91;
    }
    __Node BIN_92_205 {
        __XCoord = (956,272);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_92\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_92;
    }
    __Node BIN_93_206 {
        __XCoord = (952,232);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_93\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_93;
    }
    __Node BIN_94_207 {
        __XCoord = (951,192);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_94\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_94;
    }
    __TestGroup BinDecision_95_113 {
        __XCoord = (1207,201);
        __Port[0] {
            __PortPosition = 310;
        }
        __Port[1] {
            __PortPosition = 301;
        }
        __Port[2] {
            __PortPosition = 288;
        }
        __Port[3] {
            __PortPosition = 275;
        }
        __Port[4] {
            __PortPosition = 260;
        }
        __Port[5] {
            __PortPosition = 248;
        }
        __Port[6] {
            __PortPosition = 236;
        }
        __Port[7] {
            __PortPosition = 224;
        }
        __Port[8] {
            __PortPosition = 204;
        }
        __Port[9] {
            __PortPosition = 191;
        }
        __Port[10] {
            __PortPosition = 170;
        }
        __Port[11] {
            __PortPosition = 154;
        }
        __Port[12] {
            __PortPosition = 128;
        }
        __Port[13] {
            __PortPosition = 116;
        }
        __Port[14] {
            __PortPosition = 103;
        }
        __Port[15] {
            __PortPosition = 88;
        }
        __Port[16] {
            __PortPosition = 74;
        }
        __Port[17] {
            __PortPosition = 61;
        }
        __Port[18] {
            __PortPosition = 51;
        }
        __Port[19] {
            __PortPosition = 21;
        }
        __InputPosition = 332;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "9000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 95, ConstantBin = 95)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 96, ConstantBin = 96)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 97, ConstantBin = 97)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 98, ConstantBin = 98)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 99, ConstantBin = 99)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 100, ConstantBin = 100)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 101, ConstantBin = 101)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 102, ConstantBin = 102)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 103, ConstantBin = 103)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 104, ConstantBin = 104)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 105, ConstantBin = 105)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 106, ConstantBin = 106)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 107, ConstantBin = 107)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 108, ConstantBin = 108)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 109, ConstantBin = 109)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 110, ConstantBin = 110)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 111, ConstantBin = 111)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 112, ConstantBin = 112)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 113, ConstantBin = 113)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_95_113;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_95_113_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_95_209 {
        __XCoord = (1067,172);
        __InputPosition = 99;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_95\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_95;
    }
    __Node BIN_96_210 {
        __XCoord = (1067,215);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_96\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_96;
    }
    __Node BIN_97_211 {
        __XCoord = (1067,255);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_97\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_97;
    }
    __Node BIN_98_212 {
        __XCoord = (1066,295);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_98\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_98;
    }
    __Node BIN_99_213 {
        __XCoord = (1067,332);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_99\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_99;
    }
    __Node BIN_100_214 {
        __XCoord = (1067,371);
        __InputPosition = 88;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_100\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_100;
    }
    __Node BIN_101_215 {
        __XCoord = (1071,407);
        __InputPosition = 83;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_101\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_101;
    }
    __Node BIN_102_216 {
        __XCoord = (1075,447);
        __InputPosition = 84;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_102\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_102;
    }
    __Node BIN_103_217 {
        __XCoord = (1146,482);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_103\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_103;
    }
    __Node BIN_104_218 {
        __XCoord = (1212,482);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_104\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_104;
    }
    __Node BIN_105_219 {
        __XCoord = (1282,481);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_105\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_105;
    }
    __Node BIN_106_220 {
        __XCoord = (1352,481);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_106\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_106;
    }
    __Node BIN_107_221 {
        __XCoord = (1441,427);
        __InputPosition = 266;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_107\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_107;
    }
    __Node BIN_108_222 {
        __XCoord = (1440,386);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_108\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_108;
    }
    __Node BIN_109_223 {
        __XCoord = (1437,347);
        __InputPosition = 264;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_109\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_109;
    }
    __Node BIN_110_224 {
        __XCoord = (1437,306);
        __InputPosition = 273;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_110\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_110;
    }
    __Node BIN_111_225 {
        __XCoord = (1436,266);
        __InputPosition = 276;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_111\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_111;
    }
    __Node BIN_112_226 {
        __XCoord = (1435,226);
        __InputPosition = 266;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_112\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_112;
    }
    __Node BIN_113_227 {
        __XCoord = (1432,186);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_113\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_113;
    }
    __Node FlowNode_228 {
        __XCoord = (1427,117);
        __Port[0] {
            __PortPosition = 91;
        }
        __InputPosition = 275;
        __TestID = "\'Exit_Bin_57_113\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __PortSelect = "0";
        __PortNumber = 0;
    }
    __StartNode = BinDecision_57_75;
    __PortConnections {
        BinDecision_57_75 __Port[0] = BIN_57_169;
        BinDecision_57_75 __Port[1] = BIN_58_170;
        BinDecision_57_75 __Port[2] = BIN_59_171;
        BinDecision_57_75 __Port[3] = BIN_60_172;
        BinDecision_57_75 __Port[4] = BIN_61_173;
        BinDecision_57_75 __Port[5] = BIN_62_174;
        BinDecision_57_75 __Port[6] = BIN_63_175;
        BinDecision_57_75 __Port[7] = BIN_64_176;
        BinDecision_57_75 __Port[8] = BIN_65_177;
        BinDecision_57_75 __Port[9] = BIN_66_178;
        BinDecision_57_75 __Port[10] = BIN_67_179;
        BinDecision_57_75 __Port[11] = BIN_68_180;
        BinDecision_57_75 __Port[12] = BIN_69_181;
        BinDecision_57_75 __Port[13] = BIN_70_182;
        BinDecision_57_75 __Port[14] = BIN_71_183;
        BinDecision_57_75 __Port[15] = BIN_72_184;
        BinDecision_57_75 __Port[16] = BIN_73_185;
        BinDecision_57_75 __Port[17] = BIN_74_186;
        BinDecision_57_75 __Port[18] = BIN_75_187;
        BinDecision_57_75 __Port[19] = BinDecision_76_94;
        BinDecision_76_94 __Port[0] = BIN_76_189;
        BinDecision_76_94 __Port[1] = BIN_77_190;
        BinDecision_76_94 __Port[2] = BIN_78_191;
        BinDecision_76_94 __Port[3] = BIN_79_192;
        BinDecision_76_94 __Port[4] = BIN_80_193;
        BinDecision_76_94 __Port[5] = BIN_81_194;
        BinDecision_76_94 __Port[6] = BIN_82_195;
        BinDecision_76_94 __Port[7] = BIN_83_196;
        BinDecision_76_94 __Port[8] = BIN_84_197;
        BinDecision_76_94 __Port[9] = BIN_85_198;
        BinDecision_76_94 __Port[10] = BIN_86_199;
        BinDecision_76_94 __Port[11] = BIN_87_200;
        BinDecision_76_94 __Port[12] = BIN_88_201;
        BinDecision_76_94 __Port[13] = BIN_89_202;
        BinDecision_76_94 __Port[14] = BIN_90_203;
        BinDecision_76_94 __Port[15] = BIN_91_204;
        BinDecision_76_94 __Port[16] = BIN_92_205;
        BinDecision_76_94 __Port[17] = BIN_93_206;
        BinDecision_76_94 __Port[18] = BIN_94_207;
        BinDecision_76_94 __Port[19] = BinDecision_95_113;
        BinDecision_95_113 __Port[0] = BIN_95_209;
        BinDecision_95_113 __Port[1] = BIN_96_210;
        BinDecision_95_113 __Port[2] = BIN_97_211;
        BinDecision_95_113 __Port[3] = BIN_98_212;
        BinDecision_95_113 __Port[4] = BIN_99_213;
        BinDecision_95_113 __Port[5] = BIN_100_214;
        BinDecision_95_113 __Port[6] = BIN_101_215;
        BinDecision_95_113 __Port[7] = BIN_102_216;
        BinDecision_95_113 __Port[8] = BIN_103_217;
        BinDecision_95_113 __Port[9] = BIN_104_218;
        BinDecision_95_113 __Port[10] = BIN_105_219;
        BinDecision_95_113 __Port[11] = BIN_106_220;
        BinDecision_95_113 __Port[12] = BIN_107_221;
        BinDecision_95_113 __Port[13] = BIN_108_222;
        BinDecision_95_113 __Port[14] = BIN_109_223;
        BinDecision_95_113 __Port[15] = BIN_110_224;
        BinDecision_95_113 __Port[16] = BIN_111_225;
        BinDecision_95_113 __Port[17] = BIN_112_226;
        BinDecision_95_113 __Port[18] = BIN_113_227;
        BinDecision_95_113 __Port[19] = FlowNode_228;
    }
}
__FunctionCall BinCode_57_75_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "57"; }
    HighLimit = __Expression { __String = "75"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_57 {
    __Number = 57;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_50 {
    __Number = 50;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_58 {
    __Number = 58;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_51 {
    __Number = 51;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_59 {
    __Number = 59;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_52 {
    __Number = 52;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_60 {
    __Number = 60;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_67 {
    __Number = 67;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_61 {
    __Number = 61;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_68 {
    __Number = 68;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_62 {
    __Number = 62;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_69 {
    __Number = 69;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_63 {
    __Number = 63;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_64 {
    __Number = 64;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_65 {
    __Number = 65;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_66 {
    __Number = 66;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_70 {
    __Number = 70;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_77 {
    __Number = 77;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_00 {
    __Number = 0;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_07 {
    __Number = 7;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_71 {
    __Number = 71;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_78 {
    __Number = 78;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_01 {
    __Number = 1;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_08 {
    __Number = 8;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_72 {
    __Number = 72;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_79 {
    __Number = 79;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_02 {
    __Number = 2;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_09 {
    __Number = 9;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_73 {
    __Number = 73;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_03 {
    __Number = 3;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_74 {
    __Number = 74;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_04 {
    __Number = 4;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_75 {
    __Number = 75;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_05 {
    __Number = 5;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Mask BinMask {
    BinSelected = Meas;
    ConstantBin = Typ;
}
__FunctionCall BinCode_76_94_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "76"; }
    HighLimit = __Expression { __String = "94"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_76 {
    __Number = 76;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_06 {
    __Number = 6;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_80 {
    __Number = 80;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_87 {
    __Number = 87;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_10 {
    __Number = 10;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_17 {
    __Number = 17;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_81 {
    __Number = 81;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_88 {
    __Number = 88;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_11 {
    __Number = 11;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_18 {
    __Number = 18;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_82 {
    __Number = 82;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_89 {
    __Number = 89;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_12 {
    __Number = 12;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_19 {
    __Number = 19;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_83 {
    __Number = 83;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_13 {
    __Number = 13;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_84 {
    __Number = 84;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_14 {
    __Number = 14;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_85 {
    __Number = 85;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_15 {
    __Number = 15;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_86 {
    __Number = 86;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_16 {
    __Number = 16;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_90 {
    __Number = 90;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_97 {
    __Number = 97;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_20 {
    __Number = 20;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_27 {
    __Number = 27;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_91 {
    __Number = 91;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_98 {
    __Number = 98;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_21 {
    __Number = 21;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_28 {
    __Number = 28;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_92 {
    __Number = 92;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_99 {
    __Number = 99;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_22 {
    __Number = 22;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_29 {
    __Number = 29;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_93 {
    __Number = 93;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_23 {
    __Number = 23;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_94 {
    __Number = 94;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_24 {
    __Number = 24;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__FunctionCall BinCode_95_113_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "95"; }
    HighLimit = __Expression { __String = "113"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_95 {
    __Number = 95;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_25 {
    __Number = 25;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_96 {
    __Number = 96;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_26 {
    __Number = 26;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_100 {
    __Number = 100;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_107 {
    __Number = 107;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_170 {
    __Number = 170;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_177 {
    __Number = 177;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_101 {
    __Number = 101;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_108 {
    __Number = 108;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_171 {
    __Number = 171;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_178 {
    __Number = 178;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_102 {
    __Number = 102;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_109 {
    __Number = 109;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_172 {
    __Number = 172;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_179 {
    __Number = 179;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_103 {
    __Number = 103;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_173 {
    __Number = 173;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_104 {
    __Number = 104;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_174 {
    __Number = 174;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_105 {
    __Number = 105;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_175 {
    __Number = 175;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_106 {
    __Number = 106;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_176 {
    __Number = 176;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_110 {
    __Number = 110;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_117 {
    __Number = 117;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_180 {
    __Number = 180;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_187 {
    __Number = 187;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_111 {
    __Number = 111;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_118 {
    __Number = 118;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_181 {
    __Number = 181;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_188 {
    __Number = 188;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_112 {
    __Number = 112;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_119 {
    __Number = 119;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_182 {
    __Number = 182;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_189 {
    __Number = 189;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_113 {
    __Number = 113;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_183 {
    __Number = 183;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__SubFlow Bin_Flow_114_170 {
    __TestGroup BinDecision_114_132 {
        __XCoord = (232,212);
        __Port[0] {
            __PortPosition = 313;
        }
        __Port[1] {
            __PortPosition = 302;
        }
        __Port[2] {
            __PortPosition = 288;
        }
        __Port[3] {
            __PortPosition = 273;
        }
        __Port[4] {
            __PortPosition = 259;
        }
        __Port[5] {
            __PortPosition = 245;
        }
        __Port[6] {
            __PortPosition = 236;
        }
        __Port[7] {
            __PortPosition = 228;
        }
        __Port[8] {
            __PortPosition = 205;
        }
        __Port[9] {
            __PortPosition = 189;
        }
        __Port[10] {
            __PortPosition = 172;
        }
        __Port[11] {
            __PortPosition = 159;
        }
        __Port[12] {
            __PortPosition = 126;
        }
        __Port[13] {
            __PortPosition = 116;
        }
        __Port[14] {
            __PortPosition = 101;
        }
        __Port[15] {
            __PortPosition = 85;
        }
        __Port[16] {
            __PortPosition = 71;
        }
        __Port[17] {
            __PortPosition = 61;
        }
        __Port[18] {
            __PortPosition = 51;
        }
        __Port[19] {
            __PortPosition = 25;
        }
        __InputPosition = 333;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "10000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 114, ConstantBin = 114)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 115, ConstantBin = 115)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 116, ConstantBin = 116)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 117, ConstantBin = 117)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 118, ConstantBin = 118)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 119, ConstantBin = 119)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 120, ConstantBin = 120)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 121, ConstantBin = 121)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 122, ConstantBin = 122)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 123, ConstantBin = 123)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 124, ConstantBin = 124)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 125, ConstantBin = 125)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 126, ConstantBin = 126)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 127, ConstantBin = 127)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 128, ConstantBin = 128)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 129, ConstantBin = 129)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 130, ConstantBin = 130)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 131, ConstantBin = 131)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 132, ConstantBin = 132)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_114_132;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_114_132_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_114_354 {
        __XCoord = (73,187);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_114\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_114;
    }
    __Node BIN_115_355 {
        __XCoord = (75,227);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_115\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_115;
    }
    __Node BIN_116_356 {
        __XCoord = (77,265);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_116\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_116;
    }
    __Node BIN_117_357 {
        __XCoord = (77,305);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_117\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_117;
    }
    __Node BIN_118_358 {
        __XCoord = (77,345);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_118\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_118;
    }
    __Node BIN_119_359 {
        __XCoord = (80,385);
        __InputPosition = 99;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_119\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_119;
    }
    __Node BIN_120_360 {
        __XCoord = (83,425);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_120\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_120;
    }
    __Node BIN_121_361 {
        __XCoord = (83,467);
        __InputPosition = 83;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_121\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_121;
    }
    __Node BIN_122_362 {
        __XCoord = (180,500);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_122\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_122;
    }
    __Node BIN_123_363 {
        __XCoord = (247,498);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_123\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_123;
    }
    __Node BIN_124_364 {
        __XCoord = (317,500);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_124\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_124;
    }
    __Node BIN_125_365 {
        __XCoord = (385,498);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_125\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_125;
    }
    __Node BIN_126_366 {
        __XCoord = (475,443);
        __InputPosition = 272;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_126\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_126;
    }
    __Node BIN_127_367 {
        __XCoord = (472,402);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_127\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_127;
    }
    __Node BIN_128_368 {
        __XCoord = (470,363);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_128\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_128;
    }
    __Node BIN_129_369 {
        __XCoord = (470,323);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_129\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_129;
    }
    __Node BIN_130_370 {
        __XCoord = (467,280);
        __InputPosition = 272;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_130\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_130;
    }
    __Node BIN_131_371 {
        __XCoord = (467,242);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_131\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_131;
    }
    __Node BIN_132_372 {
        __XCoord = (467,200);
        __InputPosition = 260;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_132\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_132;
    }
    __TestGroup BinDecision_133_151 {
        __XCoord = (715,210);
        __Port[0] {
            __PortPosition = 309;
        }
        __Port[1] {
            __PortPosition = 298;
        }
        __Port[2] {
            __PortPosition = 287;
        }
        __Port[3] {
            __PortPosition = 274;
        }
        __Port[4] {
            __PortPosition = 259;
        }
        __Port[5] {
            __PortPosition = 247;
        }
        __Port[6] {
            __PortPosition = 238;
        }
        __Port[7] {
            __PortPosition = 229;
        }
        __Port[8] {
            __PortPosition = 203;
        }
        __Port[9] {
            __PortPosition = 188;
        }
        __Port[10] {
            __PortPosition = 173;
        }
        __Port[11] {
            __PortPosition = 158;
        }
        __Port[12] {
            __PortPosition = 132;
        }
        __Port[13] {
            __PortPosition = 122;
        }
        __Port[14] {
            __PortPosition = 110;
        }
        __Port[15] {
            __PortPosition = 92;
        }
        __Port[16] {
            __PortPosition = 77;
        }
        __Port[17] {
            __PortPosition = 62;
        }
        __Port[18] {
            __PortPosition = 51;
        }
        __Port[19] {
            __PortPosition = 26;
        }
        __InputPosition = 332;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "11000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 133, ConstantBin = 133)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 134, ConstantBin = 134)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 135, ConstantBin = 135)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 136, ConstantBin = 136)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 137, ConstantBin = 137)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 138, ConstantBin = 138)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 139, ConstantBin = 139)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 140, ConstantBin = 140)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 141, ConstantBin = 141)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 142, ConstantBin = 142)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 143, ConstantBin = 143)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 144, ConstantBin = 144)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 145, ConstantBin = 145)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 146, ConstantBin = 146)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 147, ConstantBin = 147)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 148, ConstantBin = 148)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 149, ConstantBin = 149)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 150, ConstantBin = 150)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 151, ConstantBin = 151)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_133_151;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_133_151_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_133_374 {
        __XCoord = (567,178);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_133\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_133;
    }
    __Node BIN_134_375 {
        __XCoord = (567,216);
        __InputPosition = 104;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_134\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_134;
    }
    __Node BIN_135_376 {
        __XCoord = (567,255);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_135\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_135;
    }
    __Node BIN_136_377 {
        __XCoord = (567,291);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_136\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_136;
    }
    __Node BIN_137_378 {
        __XCoord = (567,326);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_137\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_137;
    }
    __Node BIN_138_379 {
        __XCoord = (571,365);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_138\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_138;
    }
    __Node BIN_139_380 {
        __XCoord = (571,403);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_139\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_139;
    }
    __Node BIN_140_381 {
        __XCoord = (571,440);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_140\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_140;
    }
    __Node BIN_141_382 {
        __XCoord = (652,493);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_141\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_141;
    }
    __Node BIN_142_383 {
        __XCoord = (720,493);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_142\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_142;
    }
    __Node BIN_143_384 {
        __XCoord = (787,495);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_143\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_143;
    }
    __Node BIN_144_385 {
        __XCoord = (857,493);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_144\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_144;
    }
    __Node BIN_145_386 {
        __XCoord = (956,440);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_145\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_145;
    }
    __Node BIN_146_387 {
        __XCoord = (957,400);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_146\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_146;
    }
    __Node BIN_147_388 {
        __XCoord = (956,358);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_147\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_147;
    }
    __Node BIN_148_389 {
        __XCoord = (957,318);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_148\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_148;
    }
    __Node BIN_149_390 {
        __XCoord = (956,280);
        __InputPosition = 276;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_149\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_149;
    }
    __Node BIN_150_391 {
        __XCoord = (956,241);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_150\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_150;
    }
    __Node BIN_151_392 {
        __XCoord = (956,203);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_151\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_151;
    }
    __TestGroup BinDecision_152_170 {
        __XCoord = (1205,210);
        __Port[0] {
            __PortPosition = 309;
        }
        __Port[1] {
            __PortPosition = 300;
        }
        __Port[2] {
            __PortPosition = 289;
        }
        __Port[3] {
            __PortPosition = 275;
        }
        __Port[4] {
            __PortPosition = 262;
        }
        __Port[5] {
            __PortPosition = 248;
        }
        __Port[6] {
            __PortPosition = 237;
        }
        __Port[7] {
            __PortPosition = 229;
        }
        __Port[8] {
            __PortPosition = 206;
        }
        __Port[9] {
            __PortPosition = 191;
        }
        __Port[10] {
            __PortPosition = 174;
        }
        __Port[11] {
            __PortPosition = 158;
        }
        __Port[12] {
            __PortPosition = 128;
        }
        __Port[13] {
            __PortPosition = 118;
        }
        __Port[14] {
            __PortPosition = 104;
        }
        __Port[15] {
            __PortPosition = 89;
        }
        __Port[16] {
            __PortPosition = 74;
        }
        __Port[17] {
            __PortPosition = 61;
        }
        __Port[18] {
            __PortPosition = 52;
        }
        __Port[19] {
            __PortPosition = 22;
        }
        __InputPosition = 336;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "12000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 152, ConstantBin = 152)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 153, ConstantBin = 153)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 154, ConstantBin = 154)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 155, ConstantBin = 155)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 156, ConstantBin = 156)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 157, ConstantBin = 157)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 158, ConstantBin = 158)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 159, ConstantBin = 159)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 160, ConstantBin = 160)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 161, ConstantBin = 161)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 162, ConstantBin = 162)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 163, ConstantBin = 163)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 164, ConstantBin = 164)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 165, ConstantBin = 165)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 166, ConstantBin = 166)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 167, ConstantBin = 167)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 168, ConstantBin = 168)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 169, ConstantBin = 169)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 170, ConstantBin = 170)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_152_170;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_152_170_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_152_394 {
        __XCoord = (1052,178);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_152\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_152;
    }
    __Node BIN_153_395 {
        __XCoord = (1052,217);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_153\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_153;
    }
    __Node BIN_154_396 {
        __XCoord = (1056,257);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_154\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_154;
    }
    __Node BIN_155_397 {
        __XCoord = (1055,297);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_155\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_155;
    }
    __Node BIN_156_398 {
        __XCoord = (1055,335);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_156\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_156;
    }
    __Node BIN_157_399 {
        __XCoord = (1055,375);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_157\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_157;
    }
    __Node BIN_158_400 {
        __XCoord = (1055,413);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_158\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_158;
    }
    __Node BIN_159_401 {
        __XCoord = (1055,455);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_159\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_159;
    }
    __Node BIN_160_402 {
        __XCoord = (1146,483);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_160\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_160;
    }
    __Node BIN_161_403 {
        __XCoord = (1212,482);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_161\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_161;
    }
    __Node BIN_162_404 {
        __XCoord = (1277,482);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_162\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_162;
    }
    __Node BIN_163_405 {
        __XCoord = (1345,480);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_163\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_163;
    }
    __Node BIN_164_406 {
        __XCoord = (1425,415);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_164\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_164;
    }
    __Node BIN_165_407 {
        __XCoord = (1422,377);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_165\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_165;
    }
    __Node BIN_166_408 {
        __XCoord = (1422,340);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_166\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_166;
    }
    __Node BIN_167_409 {
        __XCoord = (1421,302);
        __InputPosition = 264;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_167\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_167;
    }
    __Node BIN_168_410 {
        __XCoord = (1417,265);
        __InputPosition = 257;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_168\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_168;
    }
    __Node BIN_169_411 {
        __XCoord = (1417,227);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_169\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_169;
    }
    __Node BIN_170_412 {
        __XCoord = (1416,188);
        __InputPosition = 257;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_170\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_170;
    }
    __Node FlowNode_413 {
        __XCoord = (1411,121);
        __Port[0] {
            __PortPosition = 91;
        }
        __InputPosition = 268;
        __TestID = "\'Exit_Bin_114_170\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __PortSelect = "0";
        __PortNumber = 0;
    }
    __StartNode = BinDecision_114_132;
    __PortConnections {
        BinDecision_114_132 __Port[0] = BIN_114_354;
        BinDecision_114_132 __Port[1] = BIN_115_355;
        BinDecision_114_132 __Port[2] = BIN_116_356;
        BinDecision_114_132 __Port[3] = BIN_117_357;
        BinDecision_114_132 __Port[4] = BIN_118_358;
        BinDecision_114_132 __Port[5] = BIN_119_359;
        BinDecision_114_132 __Port[6] = BIN_120_360;
        BinDecision_114_132 __Port[7] = BIN_121_361;
        BinDecision_114_132 __Port[8] = BIN_122_362;
        BinDecision_114_132 __Port[9] = BIN_123_363;
        BinDecision_114_132 __Port[10] = BIN_124_364;
        BinDecision_114_132 __Port[11] = BIN_125_365;
        BinDecision_114_132 __Port[12] = BIN_126_366;
        BinDecision_114_132 __Port[13] = BIN_127_367;
        BinDecision_114_132 __Port[14] = BIN_128_368;
        BinDecision_114_132 __Port[15] = BIN_129_369;
        BinDecision_114_132 __Port[16] = BIN_130_370;
        BinDecision_114_132 __Port[17] = BIN_131_371;
        BinDecision_114_132 __Port[18] = BIN_132_372;
        BinDecision_114_132 __Port[19] = BinDecision_133_151;
        BinDecision_133_151 __Port[0] = BIN_133_374;
        BinDecision_133_151 __Port[1] = BIN_134_375;
        BinDecision_133_151 __Port[2] = BIN_135_376;
        BinDecision_133_151 __Port[3] = BIN_136_377;
        BinDecision_133_151 __Port[4] = BIN_137_378;
        BinDecision_133_151 __Port[5] = BIN_138_379;
        BinDecision_133_151 __Port[6] = BIN_139_380;
        BinDecision_133_151 __Port[7] = BIN_140_381;
        BinDecision_133_151 __Port[8] = BIN_141_382;
        BinDecision_133_151 __Port[9] = BIN_142_383;
        BinDecision_133_151 __Port[10] = BIN_143_384;
        BinDecision_133_151 __Port[11] = BIN_144_385;
        BinDecision_133_151 __Port[12] = BIN_145_386;
        BinDecision_133_151 __Port[13] = BIN_146_387;
        BinDecision_133_151 __Port[14] = BIN_147_388;
        BinDecision_133_151 __Port[15] = BIN_148_389;
        BinDecision_133_151 __Port[16] = BIN_149_390;
        BinDecision_133_151 __Port[17] = BIN_150_391;
        BinDecision_133_151 __Port[18] = BIN_151_392;
        BinDecision_133_151 __Port[19] = BinDecision_152_170;
        BinDecision_152_170 __Port[0] = BIN_152_394;
        BinDecision_152_170 __Port[1] = BIN_153_395;
        BinDecision_152_170 __Port[2] = BIN_154_396;
        BinDecision_152_170 __Port[3] = BIN_155_397;
        BinDecision_152_170 __Port[4] = BIN_156_398;
        BinDecision_152_170 __Port[5] = BIN_157_399;
        BinDecision_152_170 __Port[6] = BIN_158_400;
        BinDecision_152_170 __Port[7] = BIN_159_401;
        BinDecision_152_170 __Port[8] = BIN_160_402;
        BinDecision_152_170 __Port[9] = BIN_161_403;
        BinDecision_152_170 __Port[10] = BIN_162_404;
        BinDecision_152_170 __Port[11] = BIN_163_405;
        BinDecision_152_170 __Port[12] = BIN_164_406;
        BinDecision_152_170 __Port[13] = BIN_165_407;
        BinDecision_152_170 __Port[14] = BIN_166_408;
        BinDecision_152_170 __Port[15] = BIN_167_409;
        BinDecision_152_170 __Port[16] = BIN_168_410;
        BinDecision_152_170 __Port[17] = BIN_169_411;
        BinDecision_152_170 __Port[18] = BIN_170_412;
        BinDecision_152_170 __Port[19] = FlowNode_413;
    }
}
__FunctionCall BinCode_114_132_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "114"; }
    HighLimit = __Expression { __String = "132"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_114 {
    __Number = 114;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_184 {
    __Number = 184;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_115 {
    __Number = 115;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_185 {
    __Number = 185;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_116 {
    __Number = 116;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_186 {
    __Number = 186;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_120 {
    __Number = 120;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_127 {
    __Number = 127;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_190 {
    __Number = 190;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_197 {
    __Number = 197;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_121 {
    __Number = 121;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_128 {
    __Number = 128;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_191 {
    __Number = 191;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_198 {
    __Number = 198;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_122 {
    __Number = 122;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_129 {
    __Number = 129;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_192 {
    __Number = 192;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_199 {
    __Number = 199;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_123 {
    __Number = 123;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_193 {
    __Number = 193;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_124 {
    __Number = 124;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_194 {
    __Number = 194;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_125 {
    __Number = 125;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_195 {
    __Number = 195;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_126 {
    __Number = 126;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_196 {
    __Number = 196;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_130 {
    __Number = 130;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_137 {
    __Number = 137;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_131 {
    __Number = 131;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_138 {
    __Number = 138;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_132 {
    __Number = 132;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_139 {
    __Number = 139;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__FunctionCall BinCode_133_151_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "133"; }
    HighLimit = __Expression { __String = "151"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_133 {
    __Number = 133;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_134 {
    __Number = 134;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_135 {
    __Number = 135;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_136 {
    __Number = 136;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_140 {
    __Number = 140;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_147 {
    __Number = 147;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_141 {
    __Number = 141;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_148 {
    __Number = 148;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_142 {
    __Number = 142;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_149 {
    __Number = 149;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_143 {
    __Number = 143;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_144 {
    __Number = 144;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_145 {
    __Number = 145;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_146 {
    __Number = 146;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_150 {
    __Number = 150;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_157 {
    __Number = 157;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_151 {
    __Number = 151;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_158 {
    __Number = 158;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__FunctionCall BinCode_152_170_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "152"; }
    HighLimit = __Expression { __String = "170"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_152 {
    __Number = 152;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_159 {
    __Number = 159;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_153 {
    __Number = 153;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_154 {
    __Number = 154;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_155 {
    __Number = 155;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_156 {
    __Number = 156;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_160 {
    __Number = 160;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_167 {
    __Number = 167;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_161 {
    __Number = 161;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_168 {
    __Number = 168;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_162 {
    __Number = 162;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_169 {
    __Number = 169;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_163 {
    __Number = 163;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_164 {
    __Number = 164;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_165 {
    __Number = 165;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_166 {
    __Number = 166;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__SubFlow Bin_Flow_171_227 {
    __TestGroup BinDecision_171_189 {
        __XCoord = (195,222);
        __Port[0] {
            __PortPosition = 305;
        }
        __Port[1] {
            __PortPosition = 295;
        }
        __Port[2] {
            __PortPosition = 283;
        }
        __Port[3] {
            __PortPosition = 270;
        }
        __Port[4] {
            __PortPosition = 257;
        }
        __Port[5] {
            __PortPosition = 246;
        }
        __Port[6] {
            __PortPosition = 238;
        }
        __Port[7] {
            __PortPosition = 230;
        }
        __Port[8] {
            __PortPosition = 201;
        }
        __Port[9] {
            __PortPosition = 188;
        }
        __Port[10] {
            __PortPosition = 172;
        }
        __Port[11] {
            __PortPosition = 158;
        }
        __Port[12] {
            __PortPosition = 132;
        }
        __Port[13] {
            __PortPosition = 123;
        }
        __Port[14] {
            __PortPosition = 104;
        }
        __Port[15] {
            __PortPosition = 87;
        }
        __Port[16] {
            __PortPosition = 68;
        }
        __Port[17] {
            __PortPosition = 55;
        }
        __Port[18] {
            __PortPosition = 47;
        }
        __Port[19] {
            __PortPosition = 23;
        }
        __InputPosition = 331;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "13000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 171, ConstantBin = 171)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 172, ConstantBin = 172)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 173, ConstantBin = 173)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 174, ConstantBin = 174)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 175, ConstantBin = 175)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 176, ConstantBin = 176)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 177, ConstantBin = 177)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 178, ConstantBin = 178)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 179, ConstantBin = 179)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 180, ConstantBin = 180)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 181, ConstantBin = 181)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 182, ConstantBin = 182)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 183, ConstantBin = 183)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 184, ConstantBin = 184)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 185, ConstantBin = 185)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 186, ConstantBin = 186)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 187, ConstantBin = 187)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 188, ConstantBin = 188)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 189, ConstantBin = 189)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_171_189;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_171_189_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_171_539 {
        __XCoord = (38,161);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_171\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_171;
    }
    __Node BIN_172_540 {
        __XCoord = (40,197);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_172\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_172;
    }
    __Node BIN_173_541 {
        __XCoord = (41,236);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_173\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_173;
    }
    __Node BIN_174_542 {
        __XCoord = (41,275);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_174\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_174;
    }
    __Node BIN_175_543 {
        __XCoord = (41,311);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_175\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_175;
    }
    __Node BIN_176_544 {
        __XCoord = (42,347);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_176\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_176;
    }
    __Node BIN_177_545 {
        __XCoord = (45,386);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_177\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_177;
    }
    __Node BIN_178_546 {
        __XCoord = (42,425);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_178\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_178;
    }
    __Node BIN_179_547 {
        __XCoord = (132,490);
        __InputPosition = 37;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_179\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_179;
    }
    __Node BIN_180_548 {
        __XCoord = (203,488);
        __InputPosition = 21;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_180\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_180;
    }
    __Node BIN_181_549 {
        __XCoord = (270,488);
        __InputPosition = 334;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_181\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_181;
    }
    __Node BIN_182_550 {
        __XCoord = (337,490);
        __InputPosition = 330;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_182\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_182;
    }
    __Node BIN_183_551 {
        __XCoord = (407,430);
        __InputPosition = 274;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_183\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_183;
    }
    __Node BIN_184_552 {
        __XCoord = (407,391);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_184\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_184;
    }
    __Node BIN_185_553 {
        __XCoord = (407,351);
        __InputPosition = 260;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_185\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_185;
    }
    __Node BIN_186_554 {
        __XCoord = (406,311);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_186\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_186;
    }
    __Node BIN_187_555 {
        __XCoord = (407,270);
        __InputPosition = 258;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_187\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_187;
    }
    __Node BIN_188_556 {
        __XCoord = (407,232);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_188\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_188;
    }
    __Node BIN_189_557 {
        __XCoord = (411,192);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_189\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_189;
    }
    __TestGroup BinDecision_190_208 {
        __XCoord = (656,212);
        __Port[0] {
            __PortPosition = 305;
        }
        __Port[1] {
            __PortPosition = 295;
        }
        __Port[2] {
            __PortPosition = 284;
        }
        __Port[3] {
            __PortPosition = 270;
        }
        __Port[4] {
            __PortPosition = 259;
        }
        __Port[5] {
            __PortPosition = 248;
        }
        __Port[6] {
            __PortPosition = 236;
        }
        __Port[7] {
            __PortPosition = 228;
        }
        __Port[8] {
            __PortPosition = 206;
        }
        __Port[9] {
            __PortPosition = 187;
        }
        __Port[10] {
            __PortPosition = 169;
        }
        __Port[11] {
            __PortPosition = 156;
        }
        __Port[12] {
            __PortPosition = 130;
        }
        __Port[13] {
            __PortPosition = 120;
        }
        __Port[14] {
            __PortPosition = 107;
        }
        __Port[15] {
            __PortPosition = 92;
        }
        __Port[16] {
            __PortPosition = 78;
        }
        __Port[17] {
            __PortPosition = 65;
        }
        __Port[18] {
            __PortPosition = 54;
        }
        __Port[19] {
            __PortPosition = 24;
        }
        __InputPosition = 339;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "14000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 190, ConstantBin = 190)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 191, ConstantBin = 191)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 192, ConstantBin = 192)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 193, ConstantBin = 193)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 194, ConstantBin = 194)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 195, ConstantBin = 195)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 196, ConstantBin = 196)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 197, ConstantBin = 197)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 198, ConstantBin = 198)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 199, ConstantBin = 199)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 200, ConstantBin = 200)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 201, ConstantBin = 201)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 202, ConstantBin = 202)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 203, ConstantBin = 203)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 204, ConstantBin = 204)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 205, ConstantBin = 205)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 206, ConstantBin = 206)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 207, ConstantBin = 207)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 208, ConstantBin = 208)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_190_208;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_190_208_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_190_559 {
        __XCoord = (498,191);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_190\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_190;
    }
    __Node BIN_191_560 {
        __XCoord = (498,227);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_191\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_191;
    }
    __Node BIN_192_561 {
        __XCoord = (500,263);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_192\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_192;
    }
    __Node BIN_193_562 {
        __XCoord = (498,301);
        __InputPosition = 101;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_193\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_193;
    }
    __Node BIN_194_563 {
        __XCoord = (496,338);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_194\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_194;
    }
    __Node BIN_195_564 {
        __XCoord = (498,376);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_195\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_195;
    }
    __Node BIN_196_565 {
        __XCoord = (500,413);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_196\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_196;
    }
    __Node BIN_197_566 {
        __XCoord = (501,453);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_197\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_197;
    }
    __Node BIN_198_567 {
        __XCoord = (600,497);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_198\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_198;
    }
    __Node BIN_199_568 {
        __XCoord = (666,497);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_199\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_199;
    }
    __Node BIN_200_569 {
        __XCoord = (735,497);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_200\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_200;
    }
    __Node BIN_201_570 {
        __XCoord = (800,496);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_201\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_201;
    }
    __Node BIN_202_571 {
        __XCoord = (888,442);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_202\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_202;
    }
    __Node BIN_203_572 {
        __XCoord = (888,402);
        __InputPosition = 258;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_203\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_203;
    }
    __Node BIN_204_573 {
        __XCoord = (886,363);
        __InputPosition = 261;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_204\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_204;
    }
    __Node BIN_205_574 {
        __XCoord = (885,327);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_205\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_205;
    }
    __Node BIN_206_575 {
        __XCoord = (883,288);
        __InputPosition = 272;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_206\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_206;
    }
    __Node BIN_207_576 {
        __XCoord = (885,248);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_207\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_207;
    }
    __Node BIN_208_577 {
        __XCoord = (885,212);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_208\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_208;
    }
    __TestGroup BinDecision_209_227 {
        __XCoord = (1123,213);
        __Port[0] {
            __PortPosition = 307;
        }
        __Port[1] {
            __PortPosition = 298;
        }
        __Port[2] {
            __PortPosition = 287;
        }
        __Port[3] {
            __PortPosition = 275;
        }
        __Port[4] {
            __PortPosition = 260;
        }
        __Port[5] {
            __PortPosition = 248;
        }
        __Port[6] {
            __PortPosition = 236;
        }
        __Port[7] {
            __PortPosition = 227;
        }
        __Port[8] {
            __PortPosition = 207;
        }
        __Port[9] {
            __PortPosition = 190;
        }
        __Port[10] {
            __PortPosition = 174;
        }
        __Port[11] {
            __PortPosition = 155;
        }
        __Port[12] {
            __PortPosition = 129;
        }
        __Port[13] {
            __PortPosition = 119;
        }
        __Port[14] {
            __PortPosition = 106;
        }
        __Port[15] {
            __PortPosition = 92;
        }
        __Port[16] {
            __PortPosition = 79;
        }
        __Port[17] {
            __PortPosition = 65;
        }
        __Port[18] {
            __PortPosition = 54;
        }
        __Port[19] {
            __PortPosition = 26;
        }
        __InputPosition = 331;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "15000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 209, ConstantBin = 209)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 210, ConstantBin = 210)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 211, ConstantBin = 211)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 212, ConstantBin = 212)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 213, ConstantBin = 213)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 214, ConstantBin = 214)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 215, ConstantBin = 215)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 216, ConstantBin = 216)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 217, ConstantBin = 217)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 218, ConstantBin = 218)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 219, ConstantBin = 219)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 220, ConstantBin = 220)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 221, ConstantBin = 221)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 222, ConstantBin = 222)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 223, ConstantBin = 223)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 224, ConstantBin = 224)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 225, ConstantBin = 225)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 226, ConstantBin = 226)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 227, ConstantBin = 227)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_209_227;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_209_227_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_209_579 {
        __XCoord = (980,182);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_209\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_209;
    }
    __Node BIN_210_580 {
        __XCoord = (983,222);
        __InputPosition = 87;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_210\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_210;
    }
    __Node BIN_211_581 {
        __XCoord = (983,261);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_211\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_211;
    }
    __Node BIN_212_582 {
        __XCoord = (985,298);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_212\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_212;
    }
    __Node BIN_213_583 {
        __XCoord = (986,336);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_213\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_213;
    }
    __Node BIN_214_584 {
        __XCoord = (991,373);
        __InputPosition = 97;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_214\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_214;
    }
    __Node BIN_215_585 {
        __XCoord = (990,412);
        __InputPosition = 102;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_215\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_215;
    }
    __Node BIN_216_586 {
        __XCoord = (991,451);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_216\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_216;
    }
    __Node BIN_217_587 {
        __XCoord = (1070,493);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_217\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_217;
    }
    __Node BIN_218_588 {
        __XCoord = (1136,492);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_218\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_218;
    }
    __Node BIN_219_589 {
        __XCoord = (1203,488);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_219\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_219;
    }
    __Node BIN_220_590 {
        __XCoord = (1270,488);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_220\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_220;
    }
    __Node BIN_221_591 {
        __XCoord = (1353,438);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_221\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_221;
    }
    __Node BIN_222_592 {
        __XCoord = (1351,397);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_222\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_222;
    }
    __Node BIN_223_593 {
        __XCoord = (1351,358);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_223\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_223;
    }
    __Node BIN_224_594 {
        __XCoord = (1351,322);
        __InputPosition = 263;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_224\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_224;
    }
    __Node BIN_225_595 {
        __XCoord = (1351,283);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_225\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_225;
    }
    __Node BIN_226_596 {
        __XCoord = (1351,246);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_226\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_226;
    }
    __Node BIN_227_597 {
        __XCoord = (1351,206);
        __InputPosition = 272;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_227\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_227;
    }
    __Node FlowNode_598 {
        __XCoord = (1341,138);
        __Port[0] {
            __PortPosition = 73;
        }
        __InputPosition = 274;
        __TestID = "\'Exit_Bin_171_227\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __PortSelect = "0";
        __PortNumber = 0;
    }
    __StartNode = BinDecision_171_189;
    __PortConnections {
        BinDecision_171_189 __Port[0] = BIN_171_539;
        BinDecision_171_189 __Port[1] = BIN_172_540;
        BinDecision_171_189 __Port[2] = BIN_173_541;
        BinDecision_171_189 __Port[3] = BIN_174_542;
        BinDecision_171_189 __Port[4] = BIN_175_543;
        BinDecision_171_189 __Port[5] = BIN_176_544;
        BinDecision_171_189 __Port[6] = BIN_177_545;
        BinDecision_171_189 __Port[7] = BIN_178_546;
        BinDecision_171_189 __Port[8] = BIN_179_547;
        BinDecision_171_189 __Port[9] = BIN_180_548;
        BinDecision_171_189 __Port[10] = BIN_181_549;
        BinDecision_171_189 __Port[11] = BIN_182_550;
        BinDecision_171_189 __Port[12] = BIN_183_551;
        BinDecision_171_189 __Port[13] = BIN_184_552;
        BinDecision_171_189 __Port[14] = BIN_185_553;
        BinDecision_171_189 __Port[15] = BIN_186_554;
        BinDecision_171_189 __Port[16] = BIN_187_555;
        BinDecision_171_189 __Port[17] = BIN_188_556;
        BinDecision_171_189 __Port[18] = BIN_189_557;
        BinDecision_171_189 __Port[19] = BinDecision_190_208;
        BinDecision_190_208 __Port[0] = BIN_190_559;
        BinDecision_190_208 __Port[1] = BIN_191_560;
        BinDecision_190_208 __Port[2] = BIN_192_561;
        BinDecision_190_208 __Port[3] = BIN_193_562;
        BinDecision_190_208 __Port[4] = BIN_194_563;
        BinDecision_190_208 __Port[5] = BIN_195_564;
        BinDecision_190_208 __Port[6] = BIN_196_565;
        BinDecision_190_208 __Port[7] = BIN_197_566;
        BinDecision_190_208 __Port[8] = BIN_198_567;
        BinDecision_190_208 __Port[9] = BIN_199_568;
        BinDecision_190_208 __Port[10] = BIN_200_569;
        BinDecision_190_208 __Port[11] = BIN_201_570;
        BinDecision_190_208 __Port[12] = BIN_202_571;
        BinDecision_190_208 __Port[13] = BIN_203_572;
        BinDecision_190_208 __Port[14] = BIN_204_573;
        BinDecision_190_208 __Port[15] = BIN_205_574;
        BinDecision_190_208 __Port[16] = BIN_206_575;
        BinDecision_190_208 __Port[17] = BIN_207_576;
        BinDecision_190_208 __Port[18] = BIN_208_577;
        BinDecision_190_208 __Port[19] = BinDecision_209_227;
        BinDecision_209_227 __Port[0] = BIN_209_579;
        BinDecision_209_227 __Port[1] = BIN_210_580;
        BinDecision_209_227 __Port[2] = BIN_211_581;
        BinDecision_209_227 __Port[3] = BIN_212_582;
        BinDecision_209_227 __Port[4] = BIN_213_583;
        BinDecision_209_227 __Port[5] = BIN_214_584;
        BinDecision_209_227 __Port[6] = BIN_215_585;
        BinDecision_209_227 __Port[7] = BIN_216_586;
        BinDecision_209_227 __Port[8] = BIN_217_587;
        BinDecision_209_227 __Port[9] = BIN_218_588;
        BinDecision_209_227 __Port[10] = BIN_219_589;
        BinDecision_209_227 __Port[11] = BIN_220_590;
        BinDecision_209_227 __Port[12] = BIN_221_591;
        BinDecision_209_227 __Port[13] = BIN_222_592;
        BinDecision_209_227 __Port[14] = BIN_223_593;
        BinDecision_209_227 __Port[15] = BIN_224_594;
        BinDecision_209_227 __Port[16] = BIN_225_595;
        BinDecision_209_227 __Port[17] = BIN_226_596;
        BinDecision_209_227 __Port[18] = BIN_227_597;
        BinDecision_209_227 __Port[19] = FlowNode_598;
    }
}
__FunctionCall BinCode_171_189_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "171"; }
    HighLimit = __Expression { __String = "189"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__FunctionCall BinCode_190_208_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "190"; }
    HighLimit = __Expression { __String = "208"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_200 {
    __Number = 200;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_207 {
    __Number = 207;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_201 {
    __Number = 201;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_208 {
    __Number = 208;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_202 {
    __Number = 202;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_209 {
    __Number = 209;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_203 {
    __Number = 203;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_204 {
    __Number = 204;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_205 {
    __Number = 205;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_206 {
    __Number = 206;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__FunctionCall BinCode_209_227_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "209"; }
    HighLimit = __Expression { __String = "227"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_210 {
    __Number = 210;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_217 {
    __Number = 217;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_211 {
    __Number = 211;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_218 {
    __Number = 218;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_212 {
    __Number = 212;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_219 {
    __Number = 219;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_213 {
    __Number = 213;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_214 {
    __Number = 214;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_215 {
    __Number = 215;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_216 {
    __Number = 216;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_220 {
    __Number = 220;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_227 {
    __Number = 227;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_221 {
    __Number = 221;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_228 {
    __Number = 228;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_222 {
    __Number = 222;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_229 {
    __Number = 229;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_223 {
    __Number = 223;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_224 {
    __Number = 224;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_225 {
    __Number = 225;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_226 {
    __Number = 226;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__SubFlow Bin_Flow_228_284 {
    __TestGroup BinDecision_228_246 {
        __XCoord = (202,200);
        __Port[0] {
            __PortPosition = 305;
        }
        __Port[1] {
            __PortPosition = 295;
        }
        __Port[2] {
            __PortPosition = 285;
        }
        __Port[3] {
            __PortPosition = 273;
        }
        __Port[4] {
            __PortPosition = 259;
        }
        __Port[5] {
            __PortPosition = 248;
        }
        __Port[6] {
            __PortPosition = 237;
        }
        __Port[7] {
            __PortPosition = 228;
        }
        __Port[8] {
            __PortPosition = 203;
        }
        __Port[9] {
            __PortPosition = 187;
        }
        __Port[10] {
            __PortPosition = 168;
        }
        __Port[11] {
            __PortPosition = 155;
        }
        __Port[12] {
            __PortPosition = 131;
        }
        __Port[13] {
            __PortPosition = 123;
        }
        __Port[14] {
            __PortPosition = 111;
        }
        __Port[15] {
            __PortPosition = 97;
        }
        __Port[16] {
            __PortPosition = 82;
        }
        __Port[17] {
            __PortPosition = 70;
        }
        __Port[18] {
            __PortPosition = 59;
        }
        __Port[19] {
            __PortPosition = 27;
        }
        __InputPosition = 330;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "16000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 228, ConstantBin = 228)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 229, ConstantBin = 229)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 230, ConstantBin = 230)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 231, ConstantBin = 231)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 232, ConstantBin = 232)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 233, ConstantBin = 233)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 234, ConstantBin = 234)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 235, ConstantBin = 235)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 236, ConstantBin = 236)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 237, ConstantBin = 237)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 238, ConstantBin = 238)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 239, ConstantBin = 239)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 240, ConstantBin = 240)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 241, ConstantBin = 241)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 242, ConstantBin = 242)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 243, ConstantBin = 243)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 244, ConstantBin = 244)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 245, ConstantBin = 245)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 246, ConstantBin = 246)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_228_246;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_228_246_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_228_666 {
        __XCoord = (70,161);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_228\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_228;
    }
    __Node BIN_229_667 {
        __XCoord = (67,198);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_229\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_229;
    }
    __Node BIN_230_668 {
        __XCoord = (67,233);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_230\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_230;
    }
    __Node BIN_231_669 {
        __XCoord = (70,273);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_231\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_231;
    }
    __Node BIN_232_670 {
        __XCoord = (72,312);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_232\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_232;
    }
    __Node BIN_233_671 {
        __XCoord = (70,352);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_233\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_233;
    }
    __Node BIN_234_672 {
        __XCoord = (70,387);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_234\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_234;
    }
    __Node BIN_235_673 {
        __XCoord = (72,427);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_235\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_235;
    }
    __Node BIN_236_674 {
        __XCoord = (152,462);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_236\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_236;
    }
    __Node BIN_237_675 {
        __XCoord = (217,462);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_237\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_237;
    }
    __Node BIN_238_676 {
        __XCoord = (282,461);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_238\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_238;
    }
    __Node BIN_239_677 {
        __XCoord = (345,461);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_239\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_239;
    }
    __Node BIN_240_678 {
        __XCoord = (432,401);
        __InputPosition = 262;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_240\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_240;
    }
    __Node BIN_241_679 {
        __XCoord = (435,363);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_241\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_241;
    }
    __Node BIN_242_680 {
        __XCoord = (435,327);
        __InputPosition = 276;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_242\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_242;
    }
    __Node BIN_243_681 {
        __XCoord = (436,288);
        __InputPosition = 272;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_243\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_243;
    }
    __Node BIN_244_682 {
        __XCoord = (432,252);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_244\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_244;
    }
    __Node BIN_245_683 {
        __XCoord = (435,216);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_245\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_245;
    }
    __Node BIN_246_684 {
        __XCoord = (432,181);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_246\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_246;
    }
    __TestGroup BinDecision_247_265 {
        __XCoord = (678,201);
        __Port[0] {
            __PortPosition = 306;
        }
        __Port[1] {
            __PortPosition = 296;
        }
        __Port[2] {
            __PortPosition = 285;
        }
        __Port[3] {
            __PortPosition = 272;
        }
        __Port[4] {
            __PortPosition = 259;
        }
        __Port[5] {
            __PortPosition = 248;
        }
        __Port[6] {
            __PortPosition = 237;
        }
        __Port[7] {
            __PortPosition = 229;
        }
        __Port[8] {
            __PortPosition = 206;
        }
        __Port[9] {
            __PortPosition = 191;
        }
        __Port[10] {
            __PortPosition = 172;
        }
        __Port[11] {
            __PortPosition = 155;
        }
        __Port[12] {
            __PortPosition = 130;
        }
        __Port[13] {
            __PortPosition = 122;
        }
        __Port[14] {
            __PortPosition = 110;
        }
        __Port[15] {
            __PortPosition = 95;
        }
        __Port[16] {
            __PortPosition = 80;
        }
        __Port[17] {
            __PortPosition = 67;
        }
        __Port[18] {
            __PortPosition = 56;
        }
        __Port[19] {
            __PortPosition = 23;
        }
        __InputPosition = 332;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "17000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 247, ConstantBin = 247)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 248, ConstantBin = 248)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 249, ConstantBin = 249)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 250, ConstantBin = 250)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 251, ConstantBin = 251)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 252, ConstantBin = 252)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 253, ConstantBin = 253)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 254, ConstantBin = 254)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 255, ConstantBin = 255)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 256, ConstantBin = 256)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 257, ConstantBin = 257)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 258, ConstantBin = 258)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 259, ConstantBin = 259)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 260, ConstantBin = 260)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 261, ConstantBin = 261)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 262, ConstantBin = 262)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 263, ConstantBin = 263)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 264, ConstantBin = 264)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 265, ConstantBin = 265)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_247_265;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_247_265_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_247_686 {
        __XCoord = (521,171);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_247\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_247;
    }
    __Node BIN_248_687 {
        __XCoord = (522,207);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_248\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_248;
    }
    __Node BIN_249_688 {
        __XCoord = (522,247);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_249\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_249;
    }
    __Node BIN_250_689 {
        __XCoord = (521,287);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_250\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_250;
    }
    __Node BIN_251_690 {
        __XCoord = (521,322);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_251\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_251;
    }
    __Node BIN_252_691 {
        __XCoord = (522,362);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_252\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_252;
    }
    __Node BIN_253_692 {
        __XCoord = (525,402);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_253\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_253;
    }
    __Node BIN_254_693 {
        __XCoord = (525,442);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_254\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_254;
    }
    __Node BIN_255_694 {
        __XCoord = (622,477);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_255\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_255;
    }
    __Node BIN_256_695 {
        __XCoord = (690,477);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_256\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_256;
    }
    __Node FlowNode_696 {
        __XCoord = (920,98);
        __Port[0] {
            __PortPosition = 91;
        }
        __InputPosition = 278;
        __TestID = "\'Exit_Bin_228_284\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __PortSelect = "0";
        __PortNumber = 0;
    }
    __StartNode = BinDecision_228_246;
    __PortConnections {
        BinDecision_228_246 __Port[0] = BIN_228_666;
        BinDecision_228_246 __Port[1] = BIN_229_667;
        BinDecision_228_246 __Port[2] = BIN_230_668;
        BinDecision_228_246 __Port[3] = BIN_231_669;
        BinDecision_228_246 __Port[4] = BIN_232_670;
        BinDecision_228_246 __Port[5] = BIN_233_671;
        BinDecision_228_246 __Port[6] = BIN_234_672;
        BinDecision_228_246 __Port[7] = BIN_235_673;
        BinDecision_228_246 __Port[8] = BIN_236_674;
        BinDecision_228_246 __Port[9] = BIN_237_675;
        BinDecision_228_246 __Port[10] = BIN_238_676;
        BinDecision_228_246 __Port[11] = BIN_239_677;
        BinDecision_228_246 __Port[12] = BIN_240_678;
        BinDecision_228_246 __Port[13] = BIN_241_679;
        BinDecision_228_246 __Port[14] = BIN_242_680;
        BinDecision_228_246 __Port[15] = BIN_243_681;
        BinDecision_228_246 __Port[16] = BIN_244_682;
        BinDecision_228_246 __Port[17] = BIN_245_683;
        BinDecision_228_246 __Port[18] = BIN_246_684;
        BinDecision_228_246 __Port[19] = BinDecision_247_265;
        BinDecision_247_265 __Port[0] = BIN_247_686;
        BinDecision_247_265 __Port[1] = BIN_248_687;
        BinDecision_247_265 __Port[2] = BIN_249_688;
        BinDecision_247_265 __Port[3] = BIN_250_689;
        BinDecision_247_265 __Port[4] = BIN_251_690;
        BinDecision_247_265 __Port[5] = BIN_252_691;
        BinDecision_247_265 __Port[6] = BIN_253_692;
        BinDecision_247_265 __Port[7] = BIN_254_693;
        BinDecision_247_265 __Port[8] = BIN_255_694;
        BinDecision_247_265 __Port[9] = BIN_256_695;
        BinDecision_247_265 __Port[19] = FlowNode_696;
    }
}
__FunctionCall BinCode_228_246_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "228"; }
    HighLimit = __Expression { __String = "246"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_230 {
    __Number = 230;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_237 {
    __Number = 237;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_231 {
    __Number = 231;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_238 {
    __Number = 238;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_232 {
    __Number = 232;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_239 {
    __Number = 239;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_233 {
    __Number = 233;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_234 {
    __Number = 234;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_235 {
    __Number = 235;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_236 {
    __Number = 236;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_240 {
    __Number = 240;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_247 {
    __Number = 247;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_241 {
    __Number = 241;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_248 {
    __Number = 248;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_242 {
    __Number = 242;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_249 {
    __Number = 249;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_243 {
    __Number = 243;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_244 {
    __Number = 244;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_245 {
    __Number = 245;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_246 {
    __Number = 246;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__FunctionCall BinCode_247_265_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "247"; }
    HighLimit = __Expression { __String = "265"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_250 {
    __Number = 250;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_251 {
    __Number = 251;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_252 {
    __Number = 252;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_253 {
    __Number = 253;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_254 {
    __Number = 254;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_255 {
    __Number = 255;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_256 {
    __Number = 256;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__SubFlow Bin_Flow_0_56 {
    __TestGroup BinDecision_0_18 {
        __XCoord = (220,246);
        __Port[0] {
            __PortPosition = 304;
        }
        __Port[1] {
            __PortPosition = 295;
        }
        __Port[2] {
            __PortPosition = 285;
        }
        __Port[3] {
            __PortPosition = 274;
        }
        __Port[4] {
            __PortPosition = 262;
        }
        __Port[5] {
            __PortPosition = 250;
        }
        __Port[6] {
            __PortPosition = 240;
        }
        __Port[7] {
            __PortPosition = 231;
        }
        __Port[8] {
            __PortPosition = 201;
        }
        __Port[9] {
            __PortPosition = 189;
        }
        __Port[10] {
            __PortPosition = 166;
        }
        __Port[11] {
            __PortPosition = 154;
        }
        __Port[12] {
            __PortPosition = 133;
        }
        __Port[13] {
            __PortPosition = 125;
        }
        __Port[14] {
            __PortPosition = 108;
        }
        __Port[15] {
            __PortPosition = 90;
        }
        __Port[16] {
            __PortPosition = 72;
        }
        __Port[17] {
            __PortPosition = 59;
        }
        __Port[18] {
            __PortPosition = 49;
        }
        __Port[19] {
            __PortPosition = 24;
        }
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "4000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 0, ConstantBin = 0)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 1, ConstantBin = 1)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 2, ConstantBin = 2)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 3, ConstantBin = 3)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 4, ConstantBin = 4)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 5, ConstantBin = 5)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 6, ConstantBin = 6)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 7, ConstantBin = 7)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 8, ConstantBin = 8)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 9, ConstantBin = 9)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 10, ConstantBin = 10)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 11, ConstantBin = 11)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 12, ConstantBin = 12)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 13, ConstantBin = 13)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 14, ConstantBin = 14)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 15, ConstantBin = 15)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 16, ConstantBin = 16)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 17, ConstantBin = 17)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 18, ConstantBin = 18)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_0_18;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_0_18_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_00_822 {
        __XCoord = (67,188);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_00\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_00;
    }
    __Node BIN_01_823 {
        __XCoord = (67,230);
        __InputPosition = 99;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_01\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_01;
    }
    __Node BIN_02_824 {
        __XCoord = (67,273);
        __InputPosition = 105;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_02\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_02;
    }
    __Node BIN_03_825 {
        __XCoord = (71,312);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_03\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_03;
    }
    __Node BIN_04_826 {
        __XCoord = (72,353);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_04\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_04;
    }
    __Node BIN_05_827 {
        __XCoord = (71,395);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_05\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_05;
    }
    __Node BIN_06_828 {
        __XCoord = (71,438);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_06\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_06;
    }
    __Node BIN_07_829 {
        __XCoord = (72,480);
        __InputPosition = 83;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_07\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_07;
    }
    __Node BIN_08_830 {
        __XCoord = (157,517);
        __InputPosition = 44;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_08\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_08;
    }
    __Node BIN_09_831 {
        __XCoord = (226,515);
        __InputPosition = 30;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_09\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_09;
    }
    __Node BIN_10_832 {
        __XCoord = (290,515);
        __InputPosition = 5;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_10\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_10;
    }
    __Node BIN_11_833 {
        __XCoord = (357,513);
        __InputPosition = 328;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_11\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_11;
    }
    __Node BIN_12_834 {
        __XCoord = (432,480);
        __InputPosition = 308;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_12\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_12;
    }
    __Node BIN_13_835 {
        __XCoord = (435,422);
        __InputPosition = 280;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_13\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_13;
    }
    __Node BIN_14_836 {
        __XCoord = (432,382);
        __InputPosition = 280;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_14\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_14;
    }
    __Node BIN_15_837 {
        __XCoord = (432,343);
        __InputPosition = 274;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_15\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_15;
    }
    __Node BIN_16_838 {
        __XCoord = (432,302);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_16\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_16;
    }
    __Node BIN_17_839 {
        __XCoord = (431,263);
        __InputPosition = 272;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_17\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_17;
    }
    __Node BIN_18_840 {
        __XCoord = (430,223);
        __InputPosition = 256;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_18\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_18;
    }
    __TestGroup BinDecision_19_37 {
        __XCoord = (662,235);
        __Port[0] {
            __PortPosition = 308;
        }
        __Port[1] {
            __PortPosition = 298;
        }
        __Port[2] {
            __PortPosition = 284;
        }
        __Port[3] {
            __PortPosition = 271;
        }
        __Port[4] {
            __PortPosition = 257;
        }
        __Port[5] {
            __PortPosition = 243;
        }
        __Port[6] {
            __PortPosition = 233;
        }
        __Port[7] {
            __PortPosition = 225;
        }
        __Port[8] {
            __PortPosition = 201;
        }
        __Port[9] {
            __PortPosition = 187;
        }
        __Port[10] {
            __PortPosition = 176;
        }
        __Port[11] {
            __PortPosition = 162;
        }
        __Port[12] {
            __PortPosition = 129;
        }
        __Port[13] {
            __PortPosition = 117;
        }
        __Port[14] {
            __PortPosition = 101;
        }
        __Port[15] {
            __PortPosition = 85;
        }
        __Port[16] {
            __PortPosition = 70;
        }
        __Port[17] {
            __PortPosition = 56;
        }
        __Port[18] {
            __PortPosition = 46;
        }
        __Port[19] {
            __PortPosition = 23;
        }
        __InputPosition = 338;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "5000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 19, ConstantBin = 19)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 20, ConstantBin = 20)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 21, ConstantBin = 21)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 22, ConstantBin = 22)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 23, ConstantBin = 23)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 24, ConstantBin = 24)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 25, ConstantBin = 25)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 26, ConstantBin = 26)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 27, ConstantBin = 27)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 28, ConstantBin = 28)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 29, ConstantBin = 29)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 30, ConstantBin = 30)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 31, ConstantBin = 31)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 32, ConstantBin = 32)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 33, ConstantBin = 33)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 34, ConstantBin = 34)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 35, ConstantBin = 35)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 36, ConstantBin = 36)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 37, ConstantBin = 37)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_19_37;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_19_37_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_19_842 {
        __XCoord = (522,201);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_19\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_19;
    }
    __Node BIN_20_843 {
        __XCoord = (518,241);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_20\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_20;
    }
    __Node BIN_21_844 {
        __XCoord = (521,282);
        __InputPosition = 99;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_21\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_21;
    }
    __Node BIN_22_845 {
        __XCoord = (523,321);
        __InputPosition = 85;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_22\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_22;
    }
    __Node BIN_23_846 {
        __XCoord = (526,361);
        __InputPosition = 97;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_23\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_23;
    }
    __Node BIN_24_847 {
        __XCoord = (527,401);
        __InputPosition = 83;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_24\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_24;
    }
    __Node BIN_25_848 {
        __XCoord = (530,442);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_25\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_25;
    }
    __Node BIN_26_849 {
        __XCoord = (532,485);
        __InputPosition = 81;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_26\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_26;
    }
    __Node BIN_27_850 {
        __XCoord = (600,520);
        __InputPosition = 34;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_27\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_27;
    }
    __Node BIN_28_851 {
        __XCoord = (665,522);
        __InputPosition = 19;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_28\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_28;
    }
    __Node BIN_29_852 {
        __XCoord = (731,520);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_29\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_29;
    }
    __Node BIN_30_853 {
        __XCoord = (797,520);
        __InputPosition = 342;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_30\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_30;
    }
    __Node BIN_31_854 {
        __XCoord = (882,478);
        __InputPosition = 280;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_31\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_31;
    }
    __Node BIN_32_855 {
        __XCoord = (882,430);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_32\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_32;
    }
    __Node BIN_33_856 {
        __XCoord = (882,383);
        __InputPosition = 279;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_33\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_33;
    }
    __Node BIN_34_857 {
        __XCoord = (881,343);
        __InputPosition = 284;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_34\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_34;
    }
    __Node BIN_35_858 {
        __XCoord = (882,302);
        __InputPosition = 274;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_35\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_35;
    }
    __Node BIN_36_859 {
        __XCoord = (877,260);
        __InputPosition = 285;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_36\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_36;
    }
    __Node BIN_38_860 {
        __XCoord = (981,197);
        __InputPosition = 85;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_38\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_38;
    }
    __Node BIN_37_861 {
        __XCoord = (876,220);
        __InputPosition = 274;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_37\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_37;
    }
    __TestGroup BinDecision_38_56 {
        __XCoord = (1136,228);
        __Port[0] {
            __PortPosition = 309;
        }
        __Port[1] {
            __PortPosition = 298;
        }
        __Port[2] {
            __PortPosition = 287;
        }
        __Port[3] {
            __PortPosition = 273;
        }
        __Port[4] {
            __PortPosition = 260;
        }
        __Port[5] {
            __PortPosition = 246;
        }
        __Port[6] {
            __PortPosition = 236;
        }
        __Port[7] {
            __PortPosition = 228;
        }
        __Port[8] {
            __PortPosition = 206;
        }
        __Port[9] {
            __PortPosition = 185;
        }
        __Port[10] {
            __PortPosition = 168;
        }
        __Port[11] {
            __PortPosition = 153;
        }
        __Port[12] {
            __PortPosition = 135;
        }
        __Port[13] {
            __PortPosition = 122;
        }
        __Port[14] {
            __PortPosition = 107;
        }
        __Port[15] {
            __PortPosition = 95;
        }
        __Port[16] {
            __PortPosition = 82;
        }
        __Port[17] {
            __PortPosition = 68;
        }
        __Port[18] {
            __PortPosition = 56;
        }
        __Port[19] {
            __PortPosition = 14;
        }
        __InputPosition = 336;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "6000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "if(RandomBinning, BinSelected = 38, ConstantBin = 38)"; }
            __PortExpression[1] = __Expression { __String = "if(RandomBinning, BinSelected = 39, ConstantBin = 39)"; }
            __PortExpression[2] = __Expression { __String = "if(RandomBinning, BinSelected = 40, ConstantBin = 40)"; }
            __PortExpression[3] = __Expression { __String = "if(RandomBinning, BinSelected = 41, ConstantBin = 41)"; }
            __PortExpression[4] = __Expression { __String = "if(RandomBinning, BinSelected = 42, ConstantBin = 42)"; }
            __PortExpression[5] = __Expression { __String = "if(RandomBinning, BinSelected = 43, ConstantBin = 43)"; }
            __PortExpression[6] = __Expression { __String = "if(RandomBinning, BinSelected = 44, ConstantBin = 44)"; }
            __PortExpression[7] = __Expression { __String = "if(RandomBinning, BinSelected = 45, ConstantBin = 45)"; }
            __PortExpression[8] = __Expression { __String = "if(RandomBinning, BinSelected = 46, ConstantBin = 46)"; }
            __PortExpression[9] = __Expression { __String = "if(RandomBinning, BinSelected = 47, ConstantBin = 47)"; }
            __PortExpression[10] = __Expression { __String = "if(RandomBinning, BinSelected = 48, ConstantBin = 48)"; }
            __PortExpression[11] = __Expression { __String = "if(RandomBinning, BinSelected = 49, ConstantBin = 49)"; }
            __PortExpression[12] = __Expression { __String = "if(RandomBinning, BinSelected = 50, ConstantBin = 50)"; }
            __PortExpression[13] = __Expression { __String = "if(RandomBinning, BinSelected = 51, ConstantBin = 51)"; }
            __PortExpression[14] = __Expression { __String = "if(RandomBinning, BinSelected = 52, ConstantBin = 52)"; }
            __PortExpression[15] = __Expression { __String = "if(RandomBinning, BinSelected = 53, ConstantBin = 53)"; }
            __PortExpression[16] = __Expression { __String = "if(RandomBinning, BinSelected = 54, ConstantBin = 54)"; }
            __PortExpression[17] = __Expression { __String = "if(RandomBinning, BinSelected = 55, ConstantBin = 55)"; }
            __PortExpression[18] = __Expression { __String = "if(RandomBinning, BinSelected = 56, ConstantBin = 56)"; }
            __PortExpression[19] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = TestBin_38_56;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&BinCode_38_56_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __Node BIN_39_863 {
        __XCoord = (982,237);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_39\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_39;
    }
    __Node BIN_40_864 {
        __XCoord = (987,275);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_40\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_40;
    }
    __Node BIN_41_865 {
        __XCoord = (987,315);
        __InputPosition = 96;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_41\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_41;
    }
    __Node BIN_42_866 {
        __XCoord = (991,355);
        __InputPosition = 94;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_42\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_42;
    }
    __Node BIN_43_867 {
        __XCoord = (992,395);
        __InputPosition = 90;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_43\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_43;
    }
    __Node BIN_44_868 {
        __XCoord = (996,435);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_44\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_44;
    }
    __Node BIN_45_869 {
        __XCoord = (997,473);
        __InputPosition = 92;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_45\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_45;
    }
    __Node BIN_46_870 {
        __XCoord = (1071,512);
        __InputPosition = 33;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_46\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_46;
    }
    __Node BIN_47_871 {
        __XCoord = (1142,510);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_47\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_47;
    }
    __Node BIN_48_872 {
        __XCoord = (1207,510);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_48\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_48;
    }
    __Node BIN_49_873 {
        __XCoord = (1276,510);
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_49\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_49;
    }
    __Node BIN_50_874 {
        __XCoord = (1366,472);
        __InputPosition = 274;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_50\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_50;
    }
    __Node BIN_51_875 {
        __XCoord = (1366,430);
        __InputPosition = 265;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_51\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_51;
    }
    __Node BIN_52_876 {
        __XCoord = (1366,390);
        __InputPosition = 270;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_52\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_52;
    }
    __Node BIN_53_877 {
        __XCoord = (1366,350);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_53\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_53;
    }
    __Node BIN_54_878 {
        __XCoord = (1365,308);
        __InputPosition = 263;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_54\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_54;
    }
    __Node BIN_55_879 {
        __XCoord = (1362,265);
        __InputPosition = 274;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_55\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_55;
    }
    __Node BIN_56_880 {
        __XCoord = (1362,222);
        __InputPosition = 267;
        __SpecPairs {
            BinSpec = __Expression { __Type = INTEGER; }
        }
        __TestID = "\'Bin_56\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = BIN_56;
    }
    __Node FlowNode_881 {
        __XCoord = (1351,145);
        __Port[0] {
            __PortPosition = 87;
        }
        __InputPosition = 270;
        __TestID = "\'Exit_Bin_0_56\'";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __PortSelect = "0";
        __PortNumber = 0;
    }
    __StartNode = BinDecision_0_18;
    __PortConnections {
        BinDecision_0_18 __Port[0] = BIN_00_822;
        BinDecision_0_18 __Port[1] = BIN_01_823;
        BinDecision_0_18 __Port[2] = BIN_02_824;
        BinDecision_0_18 __Port[3] = BIN_03_825;
        BinDecision_0_18 __Port[4] = BIN_04_826;
        BinDecision_0_18 __Port[5] = BIN_05_827;
        BinDecision_0_18 __Port[6] = BIN_06_828;
        BinDecision_0_18 __Port[7] = BIN_07_829;
        BinDecision_0_18 __Port[8] = BIN_08_830;
        BinDecision_0_18 __Port[9] = BIN_09_831;
        BinDecision_0_18 __Port[10] = BIN_10_832;
        BinDecision_0_18 __Port[11] = BIN_11_833;
        BinDecision_0_18 __Port[12] = BIN_12_834;
        BinDecision_0_18 __Port[13] = BIN_13_835;
        BinDecision_0_18 __Port[14] = BIN_14_836;
        BinDecision_0_18 __Port[15] = BIN_15_837;
        BinDecision_0_18 __Port[16] = BIN_16_838;
        BinDecision_0_18 __Port[17] = BIN_17_839;
        BinDecision_0_18 __Port[18] = BIN_18_840;
        BinDecision_0_18 __Port[19] = BinDecision_19_37;
        BinDecision_19_37 __Port[0] = BIN_19_842;
        BinDecision_19_37 __Port[1] = BIN_20_843;
        BinDecision_19_37 __Port[2] = BIN_21_844;
        BinDecision_19_37 __Port[3] = BIN_22_845;
        BinDecision_19_37 __Port[4] = BIN_23_846;
        BinDecision_19_37 __Port[5] = BIN_24_847;
        BinDecision_19_37 __Port[6] = BIN_25_848;
        BinDecision_19_37 __Port[7] = BIN_26_849;
        BinDecision_19_37 __Port[8] = BIN_27_850;
        BinDecision_19_37 __Port[9] = BIN_28_851;
        BinDecision_19_37 __Port[10] = BIN_29_852;
        BinDecision_19_37 __Port[11] = BIN_30_853;
        BinDecision_19_37 __Port[12] = BIN_31_854;
        BinDecision_19_37 __Port[13] = BIN_32_855;
        BinDecision_19_37 __Port[14] = BIN_33_856;
        BinDecision_19_37 __Port[15] = BIN_34_857;
        BinDecision_19_37 __Port[16] = BIN_35_858;
        BinDecision_19_37 __Port[17] = BIN_36_859;
        BinDecision_19_37 __Port[18] = BIN_37_861;
        BinDecision_19_37 __Port[19] = BinDecision_38_56;
        BinDecision_38_56 __Port[0] = BIN_38_860;
        BinDecision_38_56 __Port[1] = BIN_39_863;
        BinDecision_38_56 __Port[2] = BIN_40_864;
        BinDecision_38_56 __Port[3] = BIN_41_865;
        BinDecision_38_56 __Port[4] = BIN_42_866;
        BinDecision_38_56 __Port[5] = BIN_43_867;
        BinDecision_38_56 __Port[6] = BIN_44_868;
        BinDecision_38_56 __Port[7] = BIN_45_869;
        BinDecision_38_56 __Port[8] = BIN_46_870;
        BinDecision_38_56 __Port[9] = BIN_47_871;
        BinDecision_38_56 __Port[10] = BIN_48_872;
        BinDecision_38_56 __Port[11] = BIN_49_873;
        BinDecision_38_56 __Port[12] = BIN_50_874;
        BinDecision_38_56 __Port[13] = BIN_51_875;
        BinDecision_38_56 __Port[14] = BIN_52_876;
        BinDecision_38_56 __Port[15] = BIN_53_877;
        BinDecision_38_56 __Port[16] = BIN_54_878;
        BinDecision_38_56 __Port[17] = BIN_55_879;
        BinDecision_38_56 __Port[18] = BIN_56_880;
        BinDecision_38_56 __Port[19] = FlowNode_881;
    }
}
__FunctionCall BinCode_0_18_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "0"; }
    HighLimit = __Expression { __String = "18"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__FunctionCall BinCode_19_37_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "19"; }
    HighLimit = __Expression { __String = "37"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_30 {
    __Number = 30;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_37 {
    __Number = 37;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_31 {
    __Number = 31;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_38 {
    __Number = 38;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_32 {
    __Number = 32;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_39 {
    __Number = 39;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_33 {
    __Number = 33;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_34 {
    __Number = 34;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_35 {
    __Number = 35;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_36 {
    __Number = 36;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__FunctionCall BinCode_38_56_FC {
__Comment = "This FunctionCall Object is used to test the BinCode
for Datalog purposes. The Datalog can be compared
to the actual BinTool Result.";
    __WrapCells = __True;
    __Function = BinCode_test_func;
    RandomBinning = __Expression { __String = "RandomBinning"; }
    BinSelected = __Expression { __String = "BinSelected"; }
    ConstantBin = __Expression { __String = "ConstantBin"; }
    LowLimit = __Expression { __String = "38"; }
    HighLimit = __Expression { __String = "56"; }
    DisableDatalog = __Expression { __String = "FALSE"; }
}
__Bin BIN_40 {
    __Number = 40;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 0;
}
__Bin BIN_47 {
    __Number = 47;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 7;
}
__Bin BIN_41 {
    __Number = 41;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 1;
}
__Bin BIN_48 {
    __Number = 48;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 8;
}
__Bin BIN_42 {
    __Number = 42;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 2;
}
__Bin BIN_49 {
    __Number = 49;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 9;
}
__Bin BIN_43 {
    __Number = 43;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_44 {
    __Number = 44;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_45 {
    __Number = 45;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_46 {
    __Number = 46;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__Bin BIN_53 {
    __Number = 53;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 3;
}
__Bin BIN_54 {
    __Number = 54;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 4;
}
__Bin BIN_55 {
    __Number = 55;
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 5;
}
__Bin BIN_56 {
    __Number = 56;
    __Result = __True;
    __CheckOverFlow = __True;
    __Color = 6;
}
__SubFlow OnResetFlow {
    __TestGroup ClearResetBinValues_0 {
        __XCoord = (343,33);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __TestID = "1000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Inherit = ClearResetBinValues;
        }
    }
    __StartNode = ClearResetBinValues_0;
}
__TestGroup ClearResetBinValues {
    __XCoord = (-1,-1);
    __TestID = "18000000";
    __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
    __Exec = __Test {
        __Mask[0] = BinMask;
        __PortExpression[0] = __Expression { __String = "TRUE"; }
        __PortExpression[1] = __Expression { __String = ".Result = TM_RESULT:TM_FAIL"; }
        __Block[0] = {
            __Title = ResetBinValue;
            __WrapCells = __True;
            __TestMethod {
                __Name = LTXC::GenericTest;
                ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                __ArrayOfGroup {
                    __ArrayOf = RowEnable;
                    __ArrayOf = RowObject;
                    __ArrayOf = OverrideRowFails;
                    __ArrayOf = RowResult;
                    __Row  {
                        RowEnable = __Expression { __String = "TRUE"; }
                        RowObject = __Expression { __String = "&ResetBinValue_FC"; }
                        OverrideRowFails = __Expression { __String = "FALSE"; }
                    }
                }
                SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                SimulateRowResults = __Expression { __String = "TRUE"; }
                CharacterizationEnable = __Expression { __String = "FALSE"; }
            }
        }
    }
}
__FunctionCall ResetBinValue_FC {
__Comment = "This FunctionCall Object is used to reset the BinCode
to a unique, per-site value for execution purposes.";
    __WrapCells = __True;
    __Function = ResetBinValue_func;
    BinResetValue = __Expression { __String = "#->BinSelected"; __Mode = Output; }
}
__SubFlow PowerDownFlow {
    __TestGroup ClearResetBinValues_1 {
        __XCoord = (231,53);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "2000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Inherit = ClearResetBinValues;
        }
    }
    __StartNode = ClearResetBinValues_1;
}
__SubFlow InitFlow {
    __TestGroup InitializeBinValues {
        __XCoord = (208,42);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __SpecPairs {
            BinSpec = __Expression { __String = "BinSpec.BinCat1"; __Type = INTEGER; }
        }
        __TestID = "3000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __Mask[0] = BinMask;
            __PortExpression[0] = __Expression { __String = "TRUE"; }
            __PortExpression[1] = __Expression { __String = ".Result = TM_RESULT:TM_FAIL"; }
            __Block[0] = {
                __Title = SetBinValue;
                __WrapCells = __True;
                __TestMethod {
                    __Name = LTXC::GenericTest;
                    ShowAdditionalArgs = __Expression { __String = "TRUE"; }
                    ExecuteSitesSerially = __Expression { __String = "FALSE"; }
                    __ArrayOfGroup {
                        __ArrayOf = RowEnable;
                        __ArrayOf = RowObject;
                        __ArrayOf = OverrideRowFails;
                        __ArrayOf = RowResult;
                        __Row  {
                            RowEnable = __Expression { __String = "TRUE"; }
                            RowObject = __Expression { __String = "&SetBinValue_FC"; }
                            OverrideRowFails = __Expression { __String = "FALSE"; }
                        }
                    }
                    SimulatedTestResult = __Expression { __String = "TM_RESULT:TM_PASS"; }
                    SimulateRowResults = __Expression { __String = "TRUE"; }
                    CharacterizationEnable = __Expression { __String = "FALSE"; }
                }
            }
        }
    }
    __TestGroup TestGroup_1 {
        __XCoord = (502,155);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __TestID = "19000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __PortExpression[0] = __Expression { __String = ".Result = TM_RESULT:TM_PASS"; }
            __PortExpression[1] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = Block1;
                __TestMethod {
                    __Name = onInitTest;
                    val = __Expression { __String = "TM_RESULT:TM_NOTEST"; }
                }
            }
        }
    }
    __StartNode = InitializeBinValues;
    __PortConnections {
        InitializeBinValues __Port[0] = TestGroup_1;
        InitializeBinValues __Port[1] = TestGroup_1;
    }
}
__FunctionCall SetBinValue_FC {
__Comment = "This FunctionCall Object is used to set the BinCode
to a unique, per-site value for execution purposes.";
    __WrapCells = __True;
    __Function = SetBinValue_func;
    MaxHardwareBin = __Expression { __String = "MaxHardwareBin"; }
    BinSetValue = __Expression { __String = "#->BinSelected"; __Mode = Output; }
}
__BinMap BinPassEvenTestBins {
    __Bin BIN_00 = 0;
    __Bin BIN_01 = 1;
    __Bin BIN_02 = 2;
    __Bin BIN_03 = 3;
    __Bin BIN_04 = 4;
    __Bin BIN_05 = 5;
    __Bin BIN_06 = 6;
    __Bin BIN_07 = 7;
    __Bin BIN_08 = 8;
    __Bin BIN_10 = 10;
    __Bin BIN_11 = 11;
    __Bin BIN_12 = 12;
    __Bin BIN_13 = 13;
    __Bin BIN_14 = 14;
    __Bin BIN_15 = 15;
    __Bin BIN_16 = 16;
    __Bin BIN_17 = 17;
    __Bin BIN_18 = 18;
    __Bin BIN_19 = 19;
    __Bin BIN_20 = 20;
    __Bin BIN_21 = 21;
    __Bin BIN_22 = 22;
    __Bin BIN_23 = 23;
    __Bin BIN_24 = 24;
    __Bin BIN_25 = 25;
    __Bin BIN_26 = 26;
    __Bin BIN_27 = 27;
    __Bin BIN_28 = 28;
    __Bin BIN_29 = 29;
    __Bin BIN_30 = 30;
    __Bin BIN_31 = 31;
    __Bin BIN_32 = 32;
    __Bin BIN_33 = 33;
    __Bin BIN_34 = 34;
    __Bin BIN_35 = 35;
    __Bin BIN_36 = 36;
    __Bin BIN_37 = 37;
    __Bin BIN_38 = 38;
    __Bin BIN_39 = 39;
    __Bin BIN_40 = 40;
    __Bin BIN_41 = 41;
    __Bin BIN_42 = 42;
    __Bin BIN_43 = 43;
    __Bin BIN_44 = 44;
    __Bin BIN_45 = 45;
    __Bin BIN_46 = 46;
    __Bin BIN_47 = 47;
    __Bin BIN_48 = 48;
    __Bin BIN_49 = 49;
    __Bin BIN_50 = 50;
    __Bin BIN_51 = 51;
    __Bin BIN_09 = 9;
    __Bin BIN_52 = 52;
    __Bin BIN_53 = 53;
    __Bin BIN_54 = 54;
    __Bin BIN_55 = 55;
    __Bin BIN_56 = 56;
    __Bin BIN_57 = 57;
    __Bin BIN_58 = 58;
    __Bin BIN_59 = 59;
    __Bin BIN_60 = 60;
    __Bin BIN_61 = 61;
    __Bin BIN_62 = 62;
    __Bin BIN_63 = 63;
    __Bin BIN_64 = 64;
    __Bin BIN_65 = 65;
    __Bin BIN_66 = 66;
    __Bin BIN_67 = 67;
    __Bin BIN_68 = 68;
    __Bin BIN_69 = 69;
    __Bin BIN_70 = 70;
    __Bin BIN_71 = 71;
    __Bin BIN_72 = 72;
    __Bin BIN_73 = 73;
    __Bin BIN_74 = 74;
    __Bin BIN_75 = 75;
    __Bin BIN_76 = 76;
    __Bin BIN_77 = 77;
    __Bin BIN_78 = 78;
    __Bin BIN_79 = 79;
    __Bin BIN_80 = 80;
    __Bin BIN_81 = 81;
    __Bin BIN_82 = 82;
    __Bin BIN_83 = 83;
    __Bin BIN_84 = 84;
    __Bin BIN_85 = 85;
    __Bin BIN_86 = 86;
    __Bin BIN_87 = 87;
    __Bin BIN_88 = 88;
    __Bin BIN_89 = 89;
    __Bin BIN_90 = 90;
    __Bin BIN_91 = 91;
    __Bin BIN_92 = 92;
    __Bin BIN_93 = 93;
    __Bin BIN_94 = 94;
    __Bin BIN_95 = 95;
    __Bin BIN_96 = 96;
    __Bin BIN_97 = 97;
    __Bin BIN_98 = 98;
    __Bin BIN_99 = 99;
    __Bin BIN_100 = 100;
    __Bin BIN_101 = 101;
    __Bin BIN_102 = 102;
    __Bin BIN_103 = 103;
    __Bin BIN_104 = 104;
    __Bin BIN_105 = 105;
    __Bin BIN_106 = 106;
    __Bin BIN_107 = 107;
    __Bin BIN_108 = 108;
    __Bin BIN_109 = 109;
    __Bin BIN_110 = 110;
    __Bin BIN_111 = 111;
    __Bin BIN_112 = 112;
    __Bin BIN_113 = 113;
    __Bin BIN_114 = 114;
    __Bin BIN_115 = 115;
    __Bin BIN_116 = 116;
    __Bin BIN_117 = 117;
    __Bin BIN_118 = 118;
    __Bin BIN_119 = 119;
    __Bin BIN_120 = 120;
    __Bin BIN_121 = 121;
    __Bin BIN_122 = 122;
    __Bin BIN_123 = 123;
    __Bin BIN_124 = 124;
    __Bin BIN_125 = 125;
    __Bin BIN_126 = 126;
    __Bin BIN_127 = 127;
    __Bin BIN_128 = 128;
    __Bin BIN_129 = 129;
    __Bin BIN_130 = 130;
    __Bin BIN_131 = 131;
    __Bin BIN_132 = 132;
    __Bin BIN_133 = 133;
    __Bin BIN_134 = 134;
    __Bin BIN_135 = 135;
    __Bin BIN_136 = 136;
    __Bin BIN_137 = 137;
    __Bin BIN_138 = 138;
    __Bin BIN_139 = 139;
    __Bin BIN_140 = 140;
    __Bin BIN_141 = 141;
    __Bin BIN_142 = 142;
    __Bin BIN_143 = 143;
    __Bin BIN_144 = 144;
    __Bin BIN_145 = 145;
    __Bin BIN_146 = 146;
    __Bin BIN_147 = 147;
    __Bin BIN_148 = 148;
    __Bin BIN_149 = 149;
    __Bin BIN_150 = 150;
    __Bin BIN_151 = 151;
    __Bin BIN_152 = 152;
    __Bin BIN_153 = 153;
    __Bin BIN_154 = 154;
    __Bin BIN_155 = 155;
    __Bin BIN_156 = 156;
    __Bin BIN_157 = 157;
    __Bin BIN_158 = 158;
    __Bin BIN_159 = 159;
    __Bin BIN_160 = 160;
    __Bin BIN_161 = 161;
    __Bin BIN_162 = 162;
    __Bin BIN_163 = 163;
    __Bin BIN_164 = 164;
    __Bin BIN_165 = 165;
    __Bin BIN_166 = 166;
    __Bin BIN_167 = 167;
    __Bin BIN_168 = 168;
    __Bin BIN_169 = 169;
    __Bin BIN_170 = 170;
    __Bin BIN_171 = 171;
    __Bin BIN_172 = 172;
    __Bin BIN_173 = 173;
    __Bin BIN_174 = 174;
    __Bin BIN_175 = 175;
    __Bin BIN_176 = 176;
    __Bin BIN_177 = 177;
    __Bin BIN_178 = 178;
    __Bin BIN_179 = 179;
    __Bin BIN_180 = 180;
    __Bin BIN_181 = 181;
    __Bin BIN_182 = 182;
    __Bin BIN_183 = 183;
    __Bin BIN_184 = 184;
    __Bin BIN_185 = 185;
    __Bin BIN_186 = 186;
    __Bin BIN_187 = 187;
    __Bin BIN_188 = 188;
    __Bin BIN_189 = 189;
    __Bin BIN_190 = 190;
    __Bin BIN_191 = 191;
    __Bin BIN_192 = 192;
    __Bin BIN_193 = 193;
    __Bin BIN_194 = 194;
    __Bin BIN_195 = 195;
    __Bin BIN_196 = 196;
    __Bin BIN_197 = 197;
    __Bin BIN_198 = 198;
    __Bin BIN_199 = 199;
    __Bin BIN_200 = 200;
    __Bin BIN_201 = 201;
    __Bin BIN_202 = 202;
    __Bin BIN_203 = 203;
    __Bin BIN_204 = 204;
    __Bin BIN_205 = 205;
    __Bin BIN_206 = 206;
    __Bin BIN_207 = 207;
    __Bin BIN_208 = 208;
    __Bin BIN_209 = 209;
    __Bin BIN_210 = 210;
    __Bin BIN_211 = 211;
    __Bin BIN_212 = 212;
    __Bin BIN_213 = 213;
    __Bin BIN_214 = 214;
    __Bin BIN_215 = 215;
    __Bin BIN_216 = 216;
    __Bin BIN_217 = 217;
    __Bin BIN_218 = 218;
    __Bin BIN_219 = 219;
    __Bin BIN_220 = 220;
    __Bin BIN_221 = 221;
    __Bin BIN_222 = 222;
    __Bin BIN_223 = 223;
    __Bin BIN_224 = 224;
    __Bin BIN_225 = 225;
    __Bin BIN_226 = 226;
    __Bin BIN_227 = 227;
    __Bin BIN_228 = 228;
    __Bin BIN_229 = 229;
    __Bin BIN_230 = 230;
    __Bin BIN_231 = 231;
    __Bin BIN_232 = 232;
    __Bin BIN_233 = 233;
    __Bin BIN_234 = 234;
    __Bin BIN_235 = 235;
    __Bin BIN_236 = 236;
    __Bin BIN_237 = 237;
    __Bin BIN_238 = 238;
    __Bin BIN_239 = 239;
    __Bin BIN_240 = 240;
    __Bin BIN_241 = 241;
    __Bin BIN_242 = 242;
    __Bin BIN_243 = 243;
    __Bin BIN_244 = 244;
    __Bin BIN_245 = 245;
    __Bin BIN_246 = 246;
    __Bin BIN_247 = 247;
    __Bin BIN_248 = 248;
    __Bin BIN_249 = 249;
    __Bin BIN_250 = 250;
    __Bin BIN_251 = 251;
    __Bin BIN_252 = 252;
    __Bin BIN_253 = 253;
    __Bin BIN_254 = 254;
    __Bin BIN_255 = 255;
    __Bin BIN_256 = 256;
    __Bin evDefaultBin = 0;
}
__WaferDescriptor WaferMapDemo {
    Diameter = __Expression { __String = "152.40mMeter"; __Type = Meter; }
    DieXLength = __Expression { __String = "9.990mMeter"; }
    DieYLength = __Expression { __String = "9.998mMeter"; }
    Orientation = Left;
    Indicator = Flat;
    NumberOfDie = 182;
    XCoord1stDie = 126;
    YCoord1stDie = 121;
    XPosition1stDie = 8;
    IncreasingXDirection = Left;
    IncreasingYDirection = Bottom;
    SaveDestination = "'${LTXHOME}/testers/${LTX_TESTER}/wafermap/${ObjName}_${LotId}_${SublotId}_${WaferId}_${DlogSetupTime}.xml'";
}
__TestProg BinInterfaceTest {
    __Device = "DBG_PART_TYP_SA2XIAB1";
    __ParamCheck = 0;
    __ResolveAndLoad __OnProgramLoad;
        __OperatorVariable[0] = MaxHardwareBin;
        __OperatorVariable[1] = RandomBinning;
        __OperatorVariable[2] = Site1ConstBin;
        __OperatorVariable[3] = Site2ConstBin;
        __OperatorVariable[4] = Site3ConstBin;
        __OperatorVariable[5] = Site4ConstBin;
        __OperatorVariable[6] = Site5ConstBin;
        __OperatorVariable[7] = Site6ConstBin;
        __OperatorVariable[8] = Site7ConstBin;
        __OperatorVariable[9] = Site8ConstBin;
        __OperatorVariable[10] = Site9ConstBin;
        __OperatorVariable[11] = Site10ConstBin;
        __OperatorVariable[12] = Site11ConstBin;
        __OperatorVariable[13] = Site12ConstBin;
        __OperatorVariable[14] = Site13ConstBin;
        __OperatorVariable[15] = Site14ConstBin;
        __OperatorVariable[16] = Site15ConstBin;
        __OperatorVariable[17] = Site16ConstBin;
        __AdapterBoard = BinBoard;
        __Flow = MainFlow;
        __WaferDescriptor = WaferMapDemo;
        __BinMap = BinPassEvenTestBins;
        __Mode = 0x00000000, 0x00000000, 0x80000000;
        __DatalogObject[0] {
            __Method = ST_Datalog;
            __Format = ASCII;
            __Mode = __Immediate;
            __Type = __Production;
            __SamplingSize = 1;
            __TestIDFilter = __Expression { __String = "#"; __Mode = Output; }
            __FileFrequency = __Expression { __String = "DlogFreq:Lot"; }
            __Attribute ASCIIDatalogInColumns = __False;
            __Attribute ASCIIOptimizeForUnscaledValues = __False;
            __Attribute AppendPinName = __True;
            __Attribute EnableDebugText = __False;
            __Attribute EnableScan2007 = __False;
            __Attribute EnableVerbose = __True;
            __Attribute EnhancedFunctionalChars = __True;
            __Attribute PerSiteSummary = __False;
            __Attribute UnitAutoscaling = __True;
        }
        __DatalogObject[1] {
            __Method = ST_Datalog;
            __Format = STDFV4;
            __Mode = __Immediate;
            __Type = __Production;
            __SamplingSize = 1;
            __TestIDFilter = __Expression { __String = "#"; __Mode = Output; }
            __FileFrequency = __Expression { __String = "DlogFreq:Lot"; }
            __Destination = "'${LTXHOME}/testers/${LTX_TESTER}/dlog/${ObjName}_${LotId}_${SublotId}_${WaferId}_${DlogSetupTime}${ILQASuffix}.std'";
            __Attribute ASCIIDatalogInColumns = __False;
            __Attribute ASCIIOptimizeForUnscaledValues = __False;
            __Attribute AppendPinName = __True;
            __Attribute EnableDebugText = __False;
            __Attribute EnableScan2007 = __False;
            __Attribute EnableVerbose = __True;
            __Attribute EnhancedFunctionalChars = __False;
            __Attribute PerSiteSummary = __False;
            __Attribute UnitAutoscaling = __False;
        }
        __CollectTestSummaryInfo = __True;
        __FunctionalFails = 1;
        __ActiveExtInterface = SIMULATE_PROBE;
        __CalMethod = __Expression { __String = "CalMethod:Focused"; }
        __IOStreamList[0] {
           __IOStreamType = DataViewIO;
           __IOStreamCode = 0x800019fb;
        }
        __LotTypeSummary = "Lot";
        __ReportSummary = "Final";
        __ShowAllExecTime = __False;
        __SearchPaths {
          "$CUSTOMER_DIR/unison/ltx/methods";
          "$CUSTOMER_DIR/unison/ltx/libraries";
          "$CUSTOMER_DIR/unison/site/methods";
          "$CUSTOMER_DIR/unison/site/libraries";
          "./";
        }
}
__ApplicationLibrary BinCheckerAppLib {
   __LibraryPath = "../Libraries/AppsLib";
   __BuildPath = "../Libraries/AppsLib";
   __LibraryType = __Debug;
   __Source = "../Libraries/AppsLib/BinChecker.cpp";
   __IncludePath = "../Libraries/AppsLib";
   __LinkerPath = "../Libraries/AppsLib/$ARCH_NAME";
   __CompilerFlags = "-g";
}

__ExtInterface AETRIUM_5050_QTS {
        __RobotEquip = "aetrium 5050 QTS";
}
__ExtInterface AETRIUM_55V8 {
        __RobotEquip = "Aetrium 55v8";
}
__ExtInterface AETRIUM_TR_SERIES {
        __RobotEquip = "Aetrium TR Series";
}
__ExtInterface AETRIUM_TTL_POS_BINNING {
        __RobotEquip = "Aetrium TTL Pos Binning";
}
__ExtInterface AETRIUM_V6 {
        __RobotEquip = "aetrium V6";
}
__ExtInterface ASECO {
        __RobotEquip = "Aseco";
}
__ExtInterface DELTA_1688 {
        __RobotEquip = "Delta 1688";
}
__ExtInterface DELTA_CASTLE {
        __RobotEquip = "Delta Castle";
}
__ExtInterface DELTA_FLEX {
        __RobotEquip = "Delta Flex";
}
__ExtInterface EG20XX_GPIB {
        __RobotEquip = "EG20xx GPIB";
}
__ExtInterface EG20XX_SERIAL {
        __RobotEquip = "EG20xx Serial";
}
__ExtInterface EG40XX_SERIAL {
        __RobotEquip = "EG40xx Serial";
}
__ExtInterface EH3300 {
        __RobotEquip = "EH3300";
}
__ExtInterface ELECTROGLASS_SERIES {
        __RobotEquip = "Electroglas Series";
}
__ExtInterface EPSON_NS_SERIES {
        __RobotEquip = "Epson NS Series";
}
__ExtInterface EPSON_SERIES {
        __RobotEquip = "Epson Series";
}
__ExtInterface GERINGER {
        __RobotEquip = "Geringer";
}
__ExtInterface GERINGER_DIRECT {
        __RobotEquip = "Geringer Direct";
}
__ExtInterface GERINGER_MASTER {
        __RobotEquip = "Geringer Master";
}
__ExtInterface GPIB_4863 {
        __RobotEquip = "GPIB-4863";
}
__ExtInterface ISMECA_GPIB {
        __RobotEquip = "Ismeca GPIB";
}
__ExtInterface ISMECA_NX32 {
        __RobotEquip = "Ismeca NX32";
}
__ExtInterface ISMECA_SERIAL {
        __RobotEquip = "Ismeca Serial";
}
__ExtInterface ISMECA_TTL {
        __RobotEquip = "Ismeca TTL";
}
__ExtInterface KLA_INTEGRATOR {
        __RobotEquip = "KLA Integrator";
}
__ExtInterface MCT {
        __RobotEquip = "MCT";
}
__ExtInterface MCT_IP_TAPESTRY {
        __RobotEquip = "MCT IP Tapestry";
}
__ExtInterface MCT_IP_TAPESTRY_FT {
        __RobotEquip = "MCT Tapestry FT";
}
__ExtInterface MCT_IP_TAPESTRY_FT_AND_QA {
        __RobotEquip = "MCT Tapestry FT and QA";
}
__ExtInterface MCT_IP_TAPESTRY_QA {
        __RobotEquip = "MCT Tapestry QA";
}
__ExtInterface MIRAE_5500 {
        __RobotEquip = "Mirae 5500";
}
__ExtInterface MT93XX {
        __RobotEquip = "MT93XX";
}
__ExtInterface MULTITEST_9510 {
        __RobotEquip = "MultiTest 9510";
}
__ExtInterface NEX_TTL {
        __RobotEquip = "NEC TTL";
}
__ExtInterface NORTHWAVE {
        __RobotEquip = "NorthWave";
}
__ExtInterface P849_PROTOCOL {
        __RobotEquip = "P849 Protocol";
}
__ExtInterface RASCO_SERIES {
        __RobotEquip = "Rasco Series";
}
__ExtInterface SE_PROBE {
        __RobotEquip = "SE Probe";
}
__ExtInterface SE_SERIAL {
        __RobotEquip = "SE Serial";
}
__ExtInterface SEIKO {
        __RobotEquip = "Seiko";
}
__ExtInterface SIMECA {
        __RobotEquip = "Simeca";
}
__ExtInterface SIMULATE_PROBE {
        __RobotEquip = "Simulate Probe";
}
__ExtInterface SIMULATOR {
        __RobotEquip = "Simulator";
}
__ExtInterface SRM {
        __RobotEquip = "SRM";
}
__ExtInterface SRM_XHD_328 {
        __RobotEquip = "SRM XHD 328";
}
__ExtInterface SUMMIT_12K {
        __RobotEquip = "Summit 12K";
}
__ExtInterface SWIFT {
        __RobotEquip = "Swift";
}
__ExtInterface SYMTEK {
        __RobotEquip = "Symtek";
}
__ExtInterface SYNAX {
        __RobotEquip = "Synax";
}
__ExtInterface TECHWING {
        __RobotEquip = "TechWing";
}
__ExtInterface TEL_SERIES {
        __RobotEquip = "TEL Series";
}
__ExtInterface TESEC {
        __RobotEquip = "Tesec";
}
__ExtInterface TRITAS {
        __RobotEquip = "Tritas";
}
__ExtInterface TSK_UF_SERIES {
        __RobotEquip = "TSK UF Series";
}
__ExtInterface TTL_ASYNC_MXCTRL {
        __RobotEquip = "TTL Async mxCtrl";
}
__ExtInterface TTL_TEST {
        __RobotEquip = "TTL Test";
}
__ExtInterface TTL_MXCTRL {
        __RobotEquip = "TTL mxCtrl";
}
__ExtInterface UHIB_LLEVEL_BINARY {
        __RobotEquip = "UHIB LLevel Binary";
}
__ExtInterface UHIB_LPULSE_PARALLEL {
        __RobotEquip = "UHIB LPulse Parallel";
}
__ExtInterface UHIB1 {
        __RobotEquip = "UHIB1";
}
__ExtInterface UHIB2 {
        __RobotEquip = "UHIB2";
}
__ExtInterface UHIB3 {
        __RobotEquip = "UHIB3";
}
__ExtInterface UHIB4 {
        __RobotEquip = "UHIB4";
}
__Bin evDefaultBin {
    __Result = __False;
    __CheckOverFlow = __True;
    __Color = 2;
}
__SubFlow onwafstart {
    __TestGroup TestGroup_0 {
        __XCoord = (254,76);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __TestID = "18000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __PortExpression[0] = __Expression { __String = ".Result = TM_RESULT:TM_PASS"; }
            __PortExpression[1] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = Block1;
                __TestMethod {
                    __Name = onWaferStart;
                    val = __Expression { __String = "TM_RESULT:TM_NOTEST"; }
                }
            }
        }
    }
    __StartNode = TestGroup_0;
}
__SubFlow myOnLoad {
    __TestGroup OnLoadExec {
        __XCoord = (69,51);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __TestID = "20000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __PortExpression[0] = __Expression { __String = ".Result = TM_RESULT:TM_PASS"; }
            __PortExpression[1] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = Block1;
                __TestMethod {
                    __Name = onLoadExec;
                    val = __Expression { __String = "TM_RESULT:TM_NOTEST"; }
                }
            }
        }
    }
    __StartNode = OnLoadExec;
}
__SubFlow OnUsr0 {
    __TestGroup TestGroup_2 {
        __XCoord = (219,217);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __TestID = "22000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __PortExpression[0] = __Expression { __String = ".Result = TM_RESULT:TM_PASS"; }
            __PortExpression[1] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = Block1;
                __TestMethod {
                    __Name = onUserExec;
                    val = __Expression { __String = "TM_RESULT:TM_NOTEST"; }
                    n = __Expression { __String = "0"; }
                    t = __Expression { __String = "3.4"; }
                }
            }
        }
    }
    __StartNode = TestGroup_2;
}
__SubFlow OnUsr1 {
    __TestGroup TestGroup_3 {
        __XCoord = (209,120);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __TestID = "23000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __PortExpression[0] = __Expression { __String = ".Result = TM_RESULT:TM_PASS"; }
            __PortExpression[1] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = Block1;
                __TestMethod {
                    __Name = onUserExec;
                    val = __Expression { __String = "TM_RESULT:TM_NOTEST"; }
                    n = __Expression { __String = "1"; }
                    t = __Expression { __String = "4.1"; }
                }
            }
        }
    }
    __StartNode = TestGroup_3;
}
__SubFlow OnUsr2 {
    __TestGroup TestGroup_4 {
        __XCoord = (258,171);
        __Port[0] {
            __PortPosition = 160;
        }
        __Port[1] {
            __PortPosition = 180;
        }
        __InputPosition = 0;
        __TestID = "21000000";
        __EnableExpression = __Expression { __String = "TRUE"; __Type = BOOLEAN; }
        __Exec = __Test {
            __PortExpression[0] = __Expression { __String = ".Result = TM_RESULT:TM_PASS"; }
            __PortExpression[1] = __Expression { __String = "TRUE"; }
            __Block[0] = {
                __Title = Block1;
                __TestMethod {
                    __Name = onUserExec;
                    val = __Expression { __String = "TM_RESULT:TM_NOTEST"; }
                    n = __Expression { __String = "2"; }
                }
            }
        }
    }
    __StartNode = TestGroup_4;
}
__ApplicationLibrary ST_DLOG {
   __LibraryPath = "../Libraries/DATALOG";
   __BuildPath = "../Libraries/DATALOG";
   __LibraryType = __Debug;
   __Source = "../Libraries/DATALOG/xtrf/ST_Datalog.cpp";
   __Source = "../Libraries/DATALOG/xtrf/tinyxml2.cpp";
   __Source = "../Libraries/DATALOG/xtrf/xtrf.cpp";
   __IncludePath = "../Libraries/DATALOG/xtrf";
   __Include = "ST_Datalog.h";
   __Include = "tinyxml2.h";
   __Include = "xtrf.h";
}
